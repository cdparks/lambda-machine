name: CI

on:
  pull_request:
    paths:
      - .github/workflows/ci.yml
      - backend/**

  push:
    branches:
      - main
    paths:
      - .github/workflows/ci.yml
      - backend/**

defaults:
  run:
    shell: bash
    working-directory: backend

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: lambda_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - uses: freckle/stack-cache-action@main
        with:
          working-directory: backend

      - run: stack install --no-terminal --copy-compiler-tool dbmigrations-postgresql

      - run: db/upgrade test

      - uses: freckle/stack-action@main
        with:
          fast: ${{ github.ref != 'refs/heads/main' }}
          hlint: false
          weeder: false
          working-directory: backend

  images:
    runs-on: ubuntu-latest

    outputs:
      image: ${{ steps.prep.outputs.image }}

    steps:
      - uses: actions/checkout@v2

      - id: prep
        run: |
          image=${{ secrets.DOCKERHUB_USERNAME }}/lambda-machine:$(echo "${{ github.sha }}" | head -c7)
          echo "::set-output name=image::${image}"

      - id: buildx
        uses: docker/setup-buildx-action@v1

      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-image-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-image-

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - uses: docker/build-push-action@v2
        with:
          context: backend
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          push: true
          tags: ${{ steps.prep.outputs.image }}

      - run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
