// Generated by psc-bundle 0.7.4.1
var PS = { };
(function(exports) {
  /* global exports */
  "use strict";

  // module Prelude

  //- Functor --------------------------------------------------------------------

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };

  //- Monoid ---------------------------------------------------------------------

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  };

  //- Eq -------------------------------------------------------------------------

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  //- Ord ------------------------------------------------------------------------

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x > y ? gt : eq;
          };
        };
      };
    };
  };                                          

  //- BooleanAlgebra -------------------------------------------------------------

  exports.boolOr = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolAnd = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };

  //- Show -----------------------------------------------------------------------

  exports.showIntImpl = function (n) {
    return n.toString();
  };
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Prelude"];
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
      this.id = id;
  };
  var Functor = function (map) {
      this.map = map;
  };
  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.apply = apply;
  };
  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.pure = pure;
  };
  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.bind = bind;
  };
  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
  };
  var Semigroup = function (append) {
      this.append = append;
  };
  var Eq = function (eq) {
      this.eq = eq;
  };
  var Ord = function (__superclass_Prelude$dotEq_0, compare) {
      this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
      this.compare = compare;
  };
  var Bounded = function (bottom, top) {
      this.bottom = bottom;
      this.top = top;
  };
  var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
      this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
      this.conj = conj;
      this.disj = disj;
      this.not = not;
  };
  var Show = function (show) {
      this.show = show;
  };
  var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
  var unit = {};
  var top = function (dict) {
      return dict.top;
  };                                                 
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };                                                                     
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var pure = function (dict) {
      return dict.pure;
  };
  var $$return = function (__dict_Applicative_2) {
      return pure(__dict_Applicative_2);
  };
  var otherwise = true;
  var not = function (dict) {
      return dict.not;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $less$dollar$greater = function (__dict_Functor_5) {
      return map(__dict_Functor_5);
  };
  var $less$hash$greater = function (__dict_Functor_6) {
      return function (fa) {
          return function (f) {
              return $less$dollar$greater(__dict_Functor_6)(f)(fa);
          };
      };
  };
  var id = function (dict) {
      return dict.id;
  };
  var functorArray = new Functor($foreign.arrayMap);
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  }; 
  var eqString = new Eq($foreign.refEq);
  var ordString = new Ord(function () {
      return eqString;
  }, unsafeCompare);
  var eqChar = new Eq($foreign.refEq);
  var ordChar = new Ord(function () {
      return eqChar;
  }, unsafeCompare);
  var eq = function (dict) {
      return dict.eq;
  };
  var $eq$eq = function (__dict_Eq_7) {
      return eq(__dict_Eq_7);
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var $$const = function (a) {
      return function (_122) {
          return a;
      };
  };
  var $$void = function (__dict_Functor_12) {
      return function (fa) {
          return $less$dollar$greater(__dict_Functor_12)($$const(unit))(fa);
      };
  };
  var conj = function (dict) {
      return dict.conj;
  };
  var compose = function (dict) {
      return dict.compose;
  };
  var $greater$greater$greater = function (__dict_Semigroupoid_15) {
      return flip(compose(__dict_Semigroupoid_15));
  };
  var compare = function (dict) {
      return dict.compare;
  };
  var $less = function (__dict_Ord_17) {
      return function (a1) {
          return function (a2) {
              var _950 = compare(__dict_Ord_17)(a1)(a2);
              if (_950 instanceof LT) {
                  return true;
              };
              return false;
          };
      };
  };
  var $less$eq = function (__dict_Ord_18) {
      return function (a1) {
          return function (a2) {
              var _951 = compare(__dict_Ord_18)(a1)(a2);
              if (_951 instanceof GT) {
                  return false;
              };
              return true;
          };
      };
  };
  var categoryFn = new Category(function () {
      return semigroupoidFn;
  }, function (x) {
      return x;
  });
  var boundedBoolean = new Bounded(false, true);
  var bottom = function (dict) {
      return dict.bottom;
  };
  var booleanAlgebraBoolean = new BooleanAlgebra(function () {
      return boundedBoolean;
  }, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
  var $div$eq = function (__dict_Eq_9) {
      return function (x) {
          return function (y) {
              return not(booleanAlgebraBoolean)($eq$eq(__dict_Eq_9)(x)(y));
          };
      };
  };
  var bind = function (dict) {
      return dict.bind;
  };
  var $greater$greater$eq = function (__dict_Bind_24) {
      return bind(__dict_Bind_24);
  }; 
  var apply = function (dict) {
      return dict.apply;
  };
  var $less$times$greater = function (__dict_Apply_25) {
      return apply(__dict_Apply_25);
  };
  var liftA1 = function (__dict_Applicative_26) {
      return function (f) {
          return function (a) {
              return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
          };
      };
  }; 
  var append = function (dict) {
      return dict.append;
  };
  var $plus$plus = function (__dict_Semigroup_27) {
      return append(__dict_Semigroup_27);
  };
  var $less$greater = function (__dict_Semigroup_28) {
      return append(__dict_Semigroup_28);
  };
  var ap = function (__dict_Monad_30) {
      return function (f) {
          return function (a) {
              return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_25) {
                  return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_24) {
                      return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_25(_24));
                  });
              });
          };
      };
  };
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["Show"] = Show;
  exports["BooleanAlgebra"] = BooleanAlgebra;
  exports["Bounded"] = Bounded;
  exports["Ord"] = Ord;
  exports["Eq"] = Eq;
  exports["Semigroup"] = Semigroup;
  exports["Monad"] = Monad;
  exports["Bind"] = Bind;
  exports["Applicative"] = Applicative;
  exports["Apply"] = Apply;
  exports["Functor"] = Functor;
  exports["Category"] = Category;
  exports["Semigroupoid"] = Semigroupoid;
  exports["show"] = show;
  exports["not"] = not;
  exports["disj"] = disj;
  exports["conj"] = conj;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["unsafeCompare"] = unsafeCompare;
  exports["<="] = $less$eq;
  exports["<"] = $less;
  exports["compare"] = compare;
  exports["/="] = $div$eq;
  exports["=="] = $eq$eq;
  exports["eq"] = eq;
  exports["++"] = $plus$plus;
  exports["<>"] = $less$greater;
  exports["append"] = append;
  exports["ap"] = ap;
  exports["return"] = $$return;
  exports[">>="] = $greater$greater$eq;
  exports["bind"] = bind;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["<*>"] = $less$times$greater;
  exports["apply"] = apply;
  exports["void"] = $$void;
  exports["<#>"] = $less$hash$greater;
  exports["<$>"] = $less$dollar$greater;
  exports["map"] = map;
  exports["id"] = id;
  exports[">>>"] = $greater$greater$greater;
  exports["compose"] = compose;
  exports["otherwise"] = otherwise;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["unit"] = unit;
  exports["semigroupoidFn"] = semigroupoidFn;
  exports["categoryFn"] = categoryFn;
  exports["functorArray"] = functorArray;
  exports["semigroupString"] = semigroupString;
  exports["semigroupArray"] = semigroupArray;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
  exports["boundedBoolean"] = boundedBoolean;
  exports["booleanAlgebraBoolean"] = booleanAlgebraBoolean;
  exports["showInt"] = showInt;;
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var Alt = function (__superclass_Prelude$dotFunctor_0, alt) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.alt = alt;
  };                                         
  var alt = function (dict) {
      return dict.alt;
  };
  var $less$bar$greater = function (__dict_Alt_0) {
      return alt(__dict_Alt_0);
  };
  exports["Alt"] = Alt;
  exports["<|>"] = $less$bar$greater;
  exports["alt"] = alt;;
 
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var Lazy = function (defer) {
      this.defer = defer;
  };
  var defer = function (dict) {
      return dict.defer;
  };
  var fix = function (__dict_Lazy_0) {
      return function (f) {
          return defer(__dict_Lazy_0)(function (_183) {
              return f(fix(__dict_Lazy_0)(f));
          });
      };
  };
  exports["Lazy"] = Lazy;
  exports["fix"] = fix;
  exports["defer"] = defer;;
 
})(PS["Control.Lazy"] = PS["Control.Lazy"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];     
  var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
      this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;;
 
})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Plus = PS["Control.Plus"];     
  var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
      this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
  };
  exports["Alternative"] = Alternative;;
 
})(PS["Control.Alternative"] = PS["Control.Alternative"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
      this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
      this.mempty = mempty;
  };               
  var monoidString = new Monoid(function () {
      return Prelude.semigroupString;
  }, "");  
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;;
 
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (b) {
      return function (f) {
          return function (_299) {
              if (_299 instanceof Nothing) {
                  return b;
              };
              if (_299 instanceof Just) {
                  return f(_299.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 26, column 1 - line 27, column 1: " + [ b.constructor.name, f.constructor.name, _299.constructor.name ]);
          };
      };
  };                                                   
  var isJust = maybe(false)(Prelude["const"](true));
  var functorMaybe = new Prelude.Functor(function (fn) {
      return function (_301) {
          if (_301 instanceof Just) {
              return new Just(fn(_301.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Prelude.id(Prelude.categoryFn));
  };
  var applyMaybe = new Prelude.Apply(function () {
      return functorMaybe;
  }, function (_302) {
      return function (x) {
          if (_302 instanceof Just) {
              return Prelude["<$>"](functorMaybe)(_302.value0)(x);
          };
          if (_302 instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 121, column 1 - line 145, column 1: " + [ _302.constructor.name, x.constructor.name ]);
      };
  });
  var applicativeMaybe = new Prelude.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  var altMaybe = new Control_Alt.Alt(function () {
      return functorMaybe;
  }, function (_303) {
      return function (r) {
          if (_303 instanceof Nothing) {
              return r;
          };
          return _303;
      };
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["isJust"] = isJust;
  exports["fromMaybe"] = fromMaybe;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["altMaybe"] = altMaybe;;
 
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foldable

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var $less$times = function (__dict_Apply_0) {
      return function (a) {
          return function (b) {
              return Prelude["<*>"](__dict_Apply_0)(Prelude["<$>"](__dict_Apply_0["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
          };
      };
  };
  var $times$greater = function (__dict_Apply_1) {
      return function (a) {
          return function (b) {
              return Prelude["<*>"](__dict_Apply_1)(Prelude["<$>"](__dict_Apply_1["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
          };
      };
  };
  exports["*>"] = $times$greater;
  exports["<*"] = $less$times;;
 
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];     
  var First = function (x) {
      return x;
  };
  var semigroupFirst = new Prelude.Semigroup(function (_324) {
      return function (second) {
          if (_324 instanceof Data_Maybe.Just) {
              return _324;
          };
          return second;
      };
  });
  var runFirst = function (_313) {
      return _313;
  };
  var monoidFirst = new Data_Monoid.Monoid(function () {
      return semigroupFirst;
  }, Data_Maybe.Nothing.value);
  exports["First"] = First;
  exports["runFirst"] = runFirst;
  exports["semigroupFirst"] = semigroupFirst;
  exports["monoidFirst"] = monoidFirst;;
 
})(PS["Data.Maybe.First"] = PS["Data.Maybe.First"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];     
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (__dict_Foldable_6) {
      return function (__dict_Monoid_7) {
          return function (sep) {
              return function (xs) {
                  var go = function (_361) {
                      return function (x) {
                          if (_361.init) {
                              return {
                                  init: false, 
                                  acc: x
                              };
                          };
                          return {
                              init: false, 
                              acc: Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(_361.acc)(Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(sep)(x))
                          };
                      };
                  };
                  return (foldl(__dict_Foldable_6)(go)({
                      init: true, 
                      acc: Data_Monoid.mempty(__dict_Monoid_7)
                  })(xs)).acc;
              };
          };
      };
  }; 
  var foldableArray = new Foldable(function (__dict_Monoid_19) {
      return function (f) {
          return function (xs) {
              return foldr(foldableArray)(function (x) {
                  return function (acc) {
                      return Prelude["<>"](__dict_Monoid_19["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(__dict_Monoid_19))(xs);
          };
      };
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  exports["Foldable"] = Foldable;
  exports["intercalate"] = intercalate;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;;
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Prelude.Functor(function (f) {
      return function (_416) {
          if (_416 instanceof Left) {
              return new Left(_416.value0);
          };
          if (_416 instanceof Right) {
              return new Right(f(_416.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 52, column 1 - line 56, column 1: " + [ f.constructor.name, _416.constructor.name ]);
      };
  });
  var either = function (f) {
      return function (g) {
          return function (_415) {
              if (_415 instanceof Left) {
                  return f(_415.value0);
              };
              if (_415 instanceof Right) {
                  return g(_415.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 28, column 1 - line 29, column 1: " + [ f.constructor.name, g.constructor.name, _415.constructor.name ]);
          };
      };
  }; 
  var applyEither = new Prelude.Apply(function () {
      return functorEither;
  }, function (_418) {
      return function (r) {
          if (_418 instanceof Left) {
              return new Left(_418.value0);
          };
          if (_418 instanceof Right) {
              return Prelude["<$>"](functorEither)(_418.value0)(r);
          };
          throw new Error("Failed pattern match at Data.Either line 92, column 1 - line 116, column 1: " + [ _418.constructor.name, r.constructor.name ]);
      };
  });
  var applicativeEither = new Prelude.Applicative(function () {
      return applyEither;
  }, Right.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;;
 
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();                                                                                                 
  var fst = function (_483) {
      return _483.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;;
 
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.replicate = function (n) {
    return function (v) {
      if (n < 1) return [];
      var r = new Array(n);
      for (var i = 0; i < n; i++) r[i] = v;
      return r;
    };
  };

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Transformations -------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.reverse = function (l) {
    return l.slice().reverse();
  };

  exports.concat = function (xss) {
    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];     
  var $colon = $foreign.cons;
  var uncons = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x, 
              tail: xs
          });
      };
  });                          
  var tail = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (_585) {
      return function (xs) {
          return new Data_Maybe.Just(xs);
      };
  });
  var singleton = function (a) {
      return [ a ];
  };
  var some = function (__dict_Alternative_4) {
      return function (__dict_Lazy_5) {
          return function (v) {
              return Prelude["<*>"]((__dict_Alternative_4["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_4["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())($colon)(v))(Control_Lazy.defer(__dict_Lazy_5)(function (_583) {
                  return many(__dict_Alternative_4)(__dict_Lazy_5)(v);
              }));
          };
      };
  };
  var many = function (__dict_Alternative_6) {
      return function (__dict_Lazy_7) {
          return function (v) {
              return Control_Alt["<|>"]((__dict_Alternative_6["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_6)(__dict_Lazy_7)(v))(Prelude.pure(__dict_Alternative_6["__superclass_Prelude.Applicative_0"]())([  ]));
          };
      };
  };
  var head = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (_584) {
          return new Data_Maybe.Just(x);
      };
  });
  exports["uncons"] = uncons;
  exports["tail"] = tail;
  exports["head"] = head;
  exports["many"] = many;
  exports["some"] = some;
  exports["singleton"] = singleton;
  exports["filter"] = $foreign.filter;
  exports["reverse"] = $foreign.reverse;
  exports["snoc"] = $foreign.snoc;
  exports["cons"] = $foreign.cons;
  exports["replicate"] = $foreign.replicate;;
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_MonadPlus = PS["Control.MonadPlus"];     
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var toList = function (__dict_Foldable_2) {
      return Data_Foldable.foldr(__dict_Foldable_2)(Cons.create)(Nil.value);
  };
  var semigroupList = new Prelude.Semigroup(function (_778) {
      return function (ys) {
          if (_778 instanceof Nil) {
              return ys;
          };
          if (_778 instanceof Cons) {
              return new Cons(_778.value0, Prelude["<>"](semigroupList)(_778.value1)(ys));
          };
          throw new Error("Failed pattern match: " + [ _778.constructor.name, ys.constructor.name ]);
      };
  });
  var reverse = (function () {
      var go = function (__copy_acc) {
          return function (__copy__756) {
              var acc = __copy_acc;
              var _756 = __copy__756;
              tco: while (true) {
                  var acc_1 = acc;
                  if (_756 instanceof Nil) {
                      return acc_1;
                  };
                  if (_756 instanceof Cons) {
                      var __tco_acc = new Cons(_756.value0, acc);
                      var __tco__756 = _756.value1;
                      acc = __tco_acc;
                      _756 = __tco__756;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.List line 364, column 1 - line 365, column 1: " + [ acc.constructor.name, _756.constructor.name ]);
              };
          };
      };
      return go(Nil.value);
  })();
  var functorList = new Prelude.Functor(function (f) {
      return function (lst) {
          var go = function (__copy__779) {
              return function (__copy_acc) {
                  var _779 = __copy__779;
                  var acc = __copy_acc;
                  tco: while (true) {
                      if (_779 instanceof Nil) {
                          return acc;
                      };
                      if (_779 instanceof Cons) {
                          var __tco__779 = _779.value1;
                          var __tco_acc = new Cons(f(_779.value0), acc);
                          _779 = __tco__779;
                          acc = __tco_acc;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.List line 717, column 1 - line 724, column 1: " + [ _779.constructor.name, acc.constructor.name ]);
                  };
              };
          };
          return reverse(go(lst)(Nil.value));
      };
  });
  var foldableList = new Data_Foldable.Foldable(function (__dict_Monoid_16) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function (_2919) {
                  return Prelude.append(__dict_Monoid_16["__superclass_Prelude.Semigroup_0"]())(acc)(f(_2919));
              };
          })(Data_Monoid.mempty(__dict_Monoid_16));
      };
  }, (function () {
      var go = function (__copy_o) {
          return function (__copy_b) {
              return function (__copy__781) {
                  var o = __copy_o;
                  var b = __copy_b;
                  var _781 = __copy__781;
                  tco: while (true) {
                      var b_1 = b;
                      if (_781 instanceof Nil) {
                          return b_1;
                      };
                      if (_781 instanceof Cons) {
                          var __tco_o = o;
                          var __tco_b = o(b)(_781.value0);
                          var __tco__781 = _781.value1;
                          o = __tco_o;
                          b = __tco_b;
                          _781 = __tco__781;
                          continue tco;
                      };
                      throw new Error("Failed pattern match: " + [ o.constructor.name, b.constructor.name, _781.constructor.name ]);
                  };
              };
          };
      };
      return go;
  })(), function (o) {
      return function (b) {
          return function (_780) {
              if (_780 instanceof Nil) {
                  return b;
              };
              if (_780 instanceof Cons) {
                  return o(_780.value0)(Data_Foldable.foldr(foldableList)(o)(b)(_780.value1));
              };
              throw new Error("Failed pattern match: " + [ o.constructor.name, b.constructor.name, _780.constructor.name ]);
          };
      };
  });
  var length = Data_Foldable.foldl(foldableList)(function (acc) {
      return function (_723) {
          return acc + 1 | 0;
      };
  })(0);                                                   
  var applyList = new Prelude.Apply(function () {
      return functorList;
  }, function (_785) {
      return function (xs) {
          if (_785 instanceof Nil) {
              return Nil.value;
          };
          if (_785 instanceof Cons) {
              return Prelude["<>"](semigroupList)(Prelude["<$>"](functorList)(_785.value0)(xs))(Prelude["<*>"](applyList)(_785.value1)(xs));
          };
          throw new Error("Failed pattern match: " + [ _785.constructor.name, xs.constructor.name ]);
      };
  });
  var applicativeList = new Prelude.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["reverse"] = reverse;
  exports["length"] = length;
  exports["toList"] = toList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["applyList"] = applyList;
  exports["applicativeList"] = applicativeList;;
 
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];     
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var values = function (_799) {
      if (_799 instanceof Leaf) {
          return Data_List.Nil.value;
      };
      if (_799 instanceof Two) {
          return Prelude["++"](Data_List.semigroupList)(values(_799.value0))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(_799.value2))(values(_799.value3)));
      };
      if (_799 instanceof Three) {
          return Prelude["++"](Data_List.semigroupList)(values(_799.value0))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(_799.value2))(Prelude["++"](Data_List.semigroupList)(values(_799.value3))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(_799.value5))(values(_799.value6)))));
      };
      throw new Error("Failed pattern match: " + [ _799.constructor.name ]);
  };
  var toList = function (_797) {
      if (_797 instanceof Leaf) {
          return Data_List.Nil.value;
      };
      if (_797 instanceof Two) {
          return Prelude["++"](Data_List.semigroupList)(toList(_797.value0))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(new Data_Tuple.Tuple(_797.value1, _797.value2)))(toList(_797.value3)));
      };
      if (_797 instanceof Three) {
          return Prelude["++"](Data_List.semigroupList)(toList(_797.value0))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(new Data_Tuple.Tuple(_797.value1, _797.value2)))(Prelude["++"](Data_List.semigroupList)(toList(_797.value3))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(new Data_Tuple.Tuple(_797.value4, _797.value5)))(toList(_797.value6)))));
      };
      throw new Error("Failed pattern match: " + [ _797.constructor.name ]);
  };
  var size = function (_3480) {
      return Data_List.length(values(_3480));
  };
  var lookup = function (__copy___dict_Ord_6) {
      return function (__copy_k) {
          return function (__copy__794) {
              var __dict_Ord_6 = __copy___dict_Ord_6;
              var k = __copy_k;
              var _794 = __copy__794;
              tco: while (true) {
                  if (_794 instanceof Leaf) {
                      return Data_Maybe.Nothing.value;
                  };
                  var k_1 = k;
                  if (_794 instanceof Two && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k_1)(_794.value1)) {
                      return new Data_Maybe.Just(_794.value2);
                  };
                  var k_1 = k;
                  if (_794 instanceof Two && Prelude["<"](__dict_Ord_6)(k_1)(_794.value1)) {
                      var __tco___dict_Ord_6 = __dict_Ord_6;
                      var __tco__794 = _794.value0;
                      __dict_Ord_6 = __tco___dict_Ord_6;
                      k = k_1;
                      _794 = __tco__794;
                      continue tco;
                  };
                  var k_1 = k;
                  if (_794 instanceof Two) {
                      var __tco___dict_Ord_6 = __dict_Ord_6;
                      var __tco__794 = _794.value3;
                      __dict_Ord_6 = __tco___dict_Ord_6;
                      k = k_1;
                      _794 = __tco__794;
                      continue tco;
                  };
                  var k_1 = k;
                  if (_794 instanceof Three && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k_1)(_794.value1)) {
                      return new Data_Maybe.Just(_794.value2);
                  };
                  var k_1 = k;
                  if (_794 instanceof Three && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k_1)(_794.value4)) {
                      return new Data_Maybe.Just(_794.value5);
                  };
                  var k_1 = k;
                  if (_794 instanceof Three && Prelude["<"](__dict_Ord_6)(k_1)(_794.value1)) {
                      var __tco___dict_Ord_6 = __dict_Ord_6;
                      var __tco__794 = _794.value0;
                      __dict_Ord_6 = __tco___dict_Ord_6;
                      k = k_1;
                      _794 = __tco__794;
                      continue tco;
                  };
                  var k_1 = k;
                  if (_794 instanceof Three && (Prelude["<"](__dict_Ord_6)(_794.value1)(k_1) && Prelude["<="](__dict_Ord_6)(k_1)(_794.value4))) {
                      var __tco___dict_Ord_6 = __dict_Ord_6;
                      var __tco__794 = _794.value3;
                      __dict_Ord_6 = __tco___dict_Ord_6;
                      k = k_1;
                      _794 = __tco__794;
                      continue tco;
                  };
                  if (_794 instanceof Three) {
                      var __tco___dict_Ord_6 = __dict_Ord_6;
                      var __tco_k = k;
                      var __tco__794 = _794.value6;
                      __dict_Ord_6 = __tco___dict_Ord_6;
                      k = __tco_k;
                      _794 = __tco__794;
                      continue tco;
                  };
                  throw new Error("Failed pattern match: " + [ k.constructor.name, _794.constructor.name ]);
              };
          };
      };
  };
  var member = function (__dict_Ord_7) {
      return function (k) {
          return function (m) {
              return Data_Maybe.isJust(lookup(__dict_Ord_7)(k)(m));
          };
      };
  };
  var keys = function (_798) {
      if (_798 instanceof Leaf) {
          return Data_List.Nil.value;
      };
      if (_798 instanceof Two) {
          return Prelude["++"](Data_List.semigroupList)(keys(_798.value0))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(_798.value1))(keys(_798.value3)));
      };
      if (_798 instanceof Three) {
          return Prelude["++"](Data_List.semigroupList)(keys(_798.value0))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(_798.value1))(Prelude["++"](Data_List.semigroupList)(keys(_798.value3))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(_798.value4))(keys(_798.value6)))));
      };
      throw new Error("Failed pattern match: " + [ _798.constructor.name ]);
  };
  var functorMap = new Prelude.Functor(function (f) {
      return function (_800) {
          if (_800 instanceof Leaf) {
              return Leaf.value;
          };
          if (_800 instanceof Two) {
              return new Two(Prelude.map(functorMap)(f)(_800.value0), _800.value1, f(_800.value2), Prelude.map(functorMap)(f)(_800.value3));
          };
          if (_800 instanceof Three) {
              return new Three(Prelude.map(functorMap)(f)(_800.value0), _800.value1, f(_800.value2), Prelude.map(functorMap)(f)(_800.value3), _800.value4, f(_800.value5), Prelude.map(functorMap)(f)(_800.value6));
          };
          throw new Error("Failed pattern match: " + [ f.constructor.name, _800.constructor.name ]);
      };
  });
  var fromZipper = function (__copy___dict_Ord_8) {
      return function (__copy__795) {
          return function (__copy__796) {
              var __dict_Ord_8 = __copy___dict_Ord_8;
              var _795 = __copy__795;
              var _796 = __copy__796;
              tco: while (true) {
                  if (_795 instanceof Data_List.Nil) {
                      return _796;
                  };
                  if (_795 instanceof Data_List.Cons && _795.value0 instanceof TwoLeft) {
                      var __tco___dict_Ord_8 = __dict_Ord_8;
                      var __tco__795 = _795.value1;
                      var __tco__796 = new Two(_796, _795.value0.value0, _795.value0.value1, _795.value0.value2);
                      __dict_Ord_8 = __tco___dict_Ord_8;
                      _795 = __tco__795;
                      _796 = __tco__796;
                      continue tco;
                  };
                  if (_795 instanceof Data_List.Cons && _795.value0 instanceof TwoRight) {
                      var __tco___dict_Ord_8 = __dict_Ord_8;
                      var __tco__795 = _795.value1;
                      var __tco__796 = new Two(_795.value0.value0, _795.value0.value1, _795.value0.value2, _796);
                      __dict_Ord_8 = __tco___dict_Ord_8;
                      _795 = __tco__795;
                      _796 = __tco__796;
                      continue tco;
                  };
                  if (_795 instanceof Data_List.Cons && _795.value0 instanceof ThreeLeft) {
                      var __tco___dict_Ord_8 = __dict_Ord_8;
                      var __tco__795 = _795.value1;
                      var __tco__796 = new Three(_796, _795.value0.value0, _795.value0.value1, _795.value0.value2, _795.value0.value3, _795.value0.value4, _795.value0.value5);
                      __dict_Ord_8 = __tco___dict_Ord_8;
                      _795 = __tco__795;
                      _796 = __tco__796;
                      continue tco;
                  };
                  if (_795 instanceof Data_List.Cons && _795.value0 instanceof ThreeMiddle) {
                      var __tco___dict_Ord_8 = __dict_Ord_8;
                      var __tco__795 = _795.value1;
                      var __tco__796 = new Three(_795.value0.value0, _795.value0.value1, _795.value0.value2, _796, _795.value0.value3, _795.value0.value4, _795.value0.value5);
                      __dict_Ord_8 = __tco___dict_Ord_8;
                      _795 = __tco__795;
                      _796 = __tco__796;
                      continue tco;
                  };
                  if (_795 instanceof Data_List.Cons && _795.value0 instanceof ThreeRight) {
                      var __tco___dict_Ord_8 = __dict_Ord_8;
                      var __tco__795 = _795.value1;
                      var __tco__796 = new Three(_795.value0.value0, _795.value0.value1, _795.value0.value2, _795.value0.value3, _795.value0.value4, _795.value0.value5, _796);
                      __dict_Ord_8 = __tco___dict_Ord_8;
                      _795 = __tco__795;
                      _796 = __tco__796;
                      continue tco;
                  };
                  throw new Error("Failed pattern match: " + [ _795.constructor.name, _796.constructor.name ]);
              };
          };
      };
  };
  var insert = function (__dict_Ord_9) {
      var up = function (__copy___dict_Ord_10) {
          return function (__copy__803) {
              return function (__copy__804) {
                  var __dict_Ord_10 = __copy___dict_Ord_10;
                  var _803 = __copy__803;
                  var _804 = __copy__804;
                  tco: while (true) {
                      if (_803 instanceof Data_List.Nil) {
                          return new Two(_804.value0, _804.value1, _804.value2, _804.value3);
                      };
                      if (_803 instanceof Data_List.Cons && _803.value0 instanceof TwoLeft) {
                          return fromZipper(__dict_Ord_10)(_803.value1)(new Three(_804.value0, _804.value1, _804.value2, _804.value3, _803.value0.value0, _803.value0.value1, _803.value0.value2));
                      };
                      if (_803 instanceof Data_List.Cons && _803.value0 instanceof TwoRight) {
                          return fromZipper(__dict_Ord_10)(_803.value1)(new Three(_803.value0.value0, _803.value0.value1, _803.value0.value2, _804.value0, _804.value1, _804.value2, _804.value3));
                      };
                      if (_803 instanceof Data_List.Cons && _803.value0 instanceof ThreeLeft) {
                          var __tco___dict_Ord_10 = __dict_Ord_10;
                          var __tco__803 = _803.value1;
                          var __tco__804 = new KickUp(new Two(_804.value0, _804.value1, _804.value2, _804.value3), _803.value0.value0, _803.value0.value1, new Two(_803.value0.value2, _803.value0.value3, _803.value0.value4, _803.value0.value5));
                          __dict_Ord_10 = __tco___dict_Ord_10;
                          _803 = __tco__803;
                          _804 = __tco__804;
                          continue tco;
                      };
                      if (_803 instanceof Data_List.Cons && _803.value0 instanceof ThreeMiddle) {
                          var __tco___dict_Ord_10 = __dict_Ord_10;
                          var __tco__803 = _803.value1;
                          var __tco__804 = new KickUp(new Two(_803.value0.value0, _803.value0.value1, _803.value0.value2, _804.value0), _804.value1, _804.value2, new Two(_804.value3, _803.value0.value3, _803.value0.value4, _803.value0.value5));
                          __dict_Ord_10 = __tco___dict_Ord_10;
                          _803 = __tco__803;
                          _804 = __tco__804;
                          continue tco;
                      };
                      if (_803 instanceof Data_List.Cons && _803.value0 instanceof ThreeRight) {
                          var __tco___dict_Ord_10 = __dict_Ord_10;
                          var __tco__803 = _803.value1;
                          var __tco__804 = new KickUp(new Two(_803.value0.value0, _803.value0.value1, _803.value0.value2, _803.value0.value3), _803.value0.value4, _803.value0.value5, new Two(_804.value0, _804.value1, _804.value2, _804.value3));
                          __dict_Ord_10 = __tco___dict_Ord_10;
                          _803 = __tco__803;
                          _804 = __tco__804;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.Map line 147, column 1 - line 148, column 1: " + [ _803.constructor.name, _804.constructor.name ]);
                  };
              };
          };
      };
      var down = function (__copy___dict_Ord_11) {
          return function (__copy_ctx) {
              return function (__copy_k) {
                  return function (__copy_v) {
                      return function (__copy__802) {
                          var __dict_Ord_11 = __copy___dict_Ord_11;
                          var ctx = __copy_ctx;
                          var k = __copy_k;
                          var v = __copy_v;
                          var _802 = __copy__802;
                          tco: while (true) {
                              var ctx_1 = ctx;
                              var k_1 = k;
                              var v_1 = v;
                              if (_802 instanceof Leaf) {
                                  return up(__dict_Ord_11)(ctx_1)(new KickUp(Leaf.value, k_1, v_1, Leaf.value));
                              };
                              var ctx_1 = ctx;
                              var k_1 = k;
                              var v_1 = v;
                              if (_802 instanceof Two && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k_1)(_802.value1)) {
                                  return fromZipper(__dict_Ord_11)(ctx_1)(new Two(_802.value0, k_1, v_1, _802.value3));
                              };
                              var ctx_1 = ctx;
                              var k_1 = k;
                              var v_1 = v;
                              if (_802 instanceof Two && Prelude["<"](__dict_Ord_11)(k_1)(_802.value1)) {
                                  var __tco___dict_Ord_11 = __dict_Ord_11;
                                  var __tco_ctx = new Data_List.Cons(new TwoLeft(_802.value1, _802.value2, _802.value3), ctx_1);
                                  var __tco__802 = _802.value0;
                                  __dict_Ord_11 = __tco___dict_Ord_11;
                                  ctx = __tco_ctx;
                                  k = k_1;
                                  v = v_1;
                                  _802 = __tco__802;
                                  continue tco;
                              };
                              var ctx_1 = ctx;
                              var k_1 = k;
                              var v_1 = v;
                              if (_802 instanceof Two) {
                                  var __tco___dict_Ord_11 = __dict_Ord_11;
                                  var __tco_ctx = new Data_List.Cons(new TwoRight(_802.value0, _802.value1, _802.value2), ctx_1);
                                  var __tco__802 = _802.value3;
                                  __dict_Ord_11 = __tco___dict_Ord_11;
                                  ctx = __tco_ctx;
                                  k = k_1;
                                  v = v_1;
                                  _802 = __tco__802;
                                  continue tco;
                              };
                              var ctx_1 = ctx;
                              var k_1 = k;
                              var v_1 = v;
                              if (_802 instanceof Three && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k_1)(_802.value1)) {
                                  return fromZipper(__dict_Ord_11)(ctx_1)(new Three(_802.value0, k_1, v_1, _802.value3, _802.value4, _802.value5, _802.value6));
                              };
                              var ctx_1 = ctx;
                              var k_1 = k;
                              var v_1 = v;
                              if (_802 instanceof Three && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k_1)(_802.value4)) {
                                  return fromZipper(__dict_Ord_11)(ctx_1)(new Three(_802.value0, _802.value1, _802.value2, _802.value3, k_1, v_1, _802.value6));
                              };
                              var ctx_1 = ctx;
                              var k_1 = k;
                              var v_1 = v;
                              if (_802 instanceof Three && Prelude["<"](__dict_Ord_11)(k_1)(_802.value1)) {
                                  var __tco___dict_Ord_11 = __dict_Ord_11;
                                  var __tco_ctx = new Data_List.Cons(new ThreeLeft(_802.value1, _802.value2, _802.value3, _802.value4, _802.value5, _802.value6), ctx_1);
                                  var __tco__802 = _802.value0;
                                  __dict_Ord_11 = __tco___dict_Ord_11;
                                  ctx = __tco_ctx;
                                  k = k_1;
                                  v = v_1;
                                  _802 = __tco__802;
                                  continue tco;
                              };
                              var ctx_1 = ctx;
                              var k_1 = k;
                              var v_1 = v;
                              if (_802 instanceof Three && (Prelude["<"](__dict_Ord_11)(_802.value1)(k_1) && Prelude["<="](__dict_Ord_11)(k_1)(_802.value4))) {
                                  var __tco___dict_Ord_11 = __dict_Ord_11;
                                  var __tco_ctx = new Data_List.Cons(new ThreeMiddle(_802.value0, _802.value1, _802.value2, _802.value4, _802.value5, _802.value6), ctx_1);
                                  var __tco__802 = _802.value3;
                                  __dict_Ord_11 = __tco___dict_Ord_11;
                                  ctx = __tco_ctx;
                                  k = k_1;
                                  v = v_1;
                                  _802 = __tco__802;
                                  continue tco;
                              };
                              if (_802 instanceof Three) {
                                  var __tco___dict_Ord_11 = __dict_Ord_11;
                                  var __tco_ctx = new Data_List.Cons(new ThreeRight(_802.value0, _802.value1, _802.value2, _802.value3, _802.value4, _802.value5), ctx);
                                  var __tco_k = k;
                                  var __tco_v = v;
                                  var __tco__802 = _802.value6;
                                  __dict_Ord_11 = __tco___dict_Ord_11;
                                  ctx = __tco_ctx;
                                  k = __tco_k;
                                  v = __tco_v;
                                  _802 = __tco__802;
                                  continue tco;
                              };
                              throw new Error("Failed pattern match at Data.Map line 147, column 1 - line 148, column 1: " + [ ctx.constructor.name, k.constructor.name, v.constructor.name, _802.constructor.name ]);
                          };
                      };
                  };
              };
          };
      };
      return down(__dict_Ord_9)(Data_List.Nil.value);
  };
  var empty = Leaf.value;
  var fromList = function (__dict_Ord_15) {
      return Data_Foldable.foldl(Data_List.foldableList)(function (m) {
          return function (_790) {
              return insert(__dict_Ord_15)(_790.value0)(_790.value1)(m);
          };
      })(empty);
  };
  var $$delete = function (__dict_Ord_17) {
      var up = function (__copy___dict_Ord_18) {
          return function (__copy__806) {
              return function (__copy__807) {
                  var __dict_Ord_18 = __copy___dict_Ord_18;
                  var _806 = __copy__806;
                  var _807 = __copy__807;
                  tco: while (true) {
                      if (_806 instanceof Data_List.Nil) {
                          return _807;
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof TwoLeft && (_806.value0.value2 instanceof Leaf && _807 instanceof Leaf))) {
                          return fromZipper(__dict_Ord_18)(_806.value1)(new Two(Leaf.value, _806.value0.value0, _806.value0.value1, Leaf.value));
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof TwoRight && (_806.value0.value0 instanceof Leaf && _807 instanceof Leaf))) {
                          return fromZipper(__dict_Ord_18)(_806.value1)(new Two(Leaf.value, _806.value0.value1, _806.value0.value2, Leaf.value));
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof TwoLeft && _806.value0.value2 instanceof Two)) {
                          var __tco___dict_Ord_18 = __dict_Ord_18;
                          var __tco__806 = _806.value1;
                          var __tco__807 = new Three(_807, _806.value0.value0, _806.value0.value1, _806.value0.value2.value0, _806.value0.value2.value1, _806.value0.value2.value2, _806.value0.value2.value3);
                          __dict_Ord_18 = __tco___dict_Ord_18;
                          _806 = __tco__806;
                          _807 = __tco__807;
                          continue tco;
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof TwoRight && _806.value0.value0 instanceof Two)) {
                          var __tco___dict_Ord_18 = __dict_Ord_18;
                          var __tco__806 = _806.value1;
                          var __tco__807 = new Three(_806.value0.value0.value0, _806.value0.value0.value1, _806.value0.value0.value2, _806.value0.value0.value3, _806.value0.value1, _806.value0.value2, _807);
                          __dict_Ord_18 = __tco___dict_Ord_18;
                          _806 = __tco__806;
                          _807 = __tco__807;
                          continue tco;
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof TwoLeft && _806.value0.value2 instanceof Three)) {
                          return fromZipper(__dict_Ord_18)(_806.value1)(new Two(new Two(_807, _806.value0.value0, _806.value0.value1, _806.value0.value2.value0), _806.value0.value2.value1, _806.value0.value2.value2, new Two(_806.value0.value2.value3, _806.value0.value2.value4, _806.value0.value2.value5, _806.value0.value2.value6)));
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof TwoRight && _806.value0.value0 instanceof Three)) {
                          return fromZipper(__dict_Ord_18)(_806.value1)(new Two(new Two(_806.value0.value0.value0, _806.value0.value0.value1, _806.value0.value0.value2, _806.value0.value0.value3), _806.value0.value0.value4, _806.value0.value0.value5, new Two(_806.value0.value0.value6, _806.value0.value1, _806.value0.value2, _807)));
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof ThreeLeft && (_806.value0.value2 instanceof Leaf && (_806.value0.value5 instanceof Leaf && _807 instanceof Leaf)))) {
                          return fromZipper(__dict_Ord_18)(_806.value1)(new Three(Leaf.value, _806.value0.value0, _806.value0.value1, Leaf.value, _806.value0.value3, _806.value0.value4, Leaf.value));
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof ThreeMiddle && (_806.value0.value0 instanceof Leaf && (_806.value0.value5 instanceof Leaf && _807 instanceof Leaf)))) {
                          return fromZipper(__dict_Ord_18)(_806.value1)(new Three(Leaf.value, _806.value0.value1, _806.value0.value2, Leaf.value, _806.value0.value3, _806.value0.value4, Leaf.value));
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof ThreeRight && (_806.value0.value0 instanceof Leaf && (_806.value0.value3 instanceof Leaf && _807 instanceof Leaf)))) {
                          return fromZipper(__dict_Ord_18)(_806.value1)(new Three(Leaf.value, _806.value0.value1, _806.value0.value2, Leaf.value, _806.value0.value4, _806.value0.value5, Leaf.value));
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof ThreeLeft && _806.value0.value2 instanceof Two)) {
                          return fromZipper(__dict_Ord_18)(_806.value1)(new Two(new Three(_807, _806.value0.value0, _806.value0.value1, _806.value0.value2.value0, _806.value0.value2.value1, _806.value0.value2.value2, _806.value0.value2.value3), _806.value0.value3, _806.value0.value4, _806.value0.value5));
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof ThreeMiddle && _806.value0.value0 instanceof Two)) {
                          return fromZipper(__dict_Ord_18)(_806.value1)(new Two(new Three(_806.value0.value0.value0, _806.value0.value0.value1, _806.value0.value0.value2, _806.value0.value0.value3, _806.value0.value1, _806.value0.value2, _807), _806.value0.value3, _806.value0.value4, _806.value0.value5));
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof ThreeMiddle && _806.value0.value5 instanceof Two)) {
                          return fromZipper(__dict_Ord_18)(_806.value1)(new Two(_806.value0.value0, _806.value0.value1, _806.value0.value2, new Three(_807, _806.value0.value3, _806.value0.value4, _806.value0.value5.value0, _806.value0.value5.value1, _806.value0.value5.value2, _806.value0.value5.value3)));
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof ThreeRight && _806.value0.value3 instanceof Two)) {
                          return fromZipper(__dict_Ord_18)(_806.value1)(new Two(_806.value0.value0, _806.value0.value1, _806.value0.value2, new Three(_806.value0.value3.value0, _806.value0.value3.value1, _806.value0.value3.value2, _806.value0.value3.value3, _806.value0.value4, _806.value0.value5, _807)));
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof ThreeLeft && _806.value0.value2 instanceof Three)) {
                          return fromZipper(__dict_Ord_18)(_806.value1)(new Three(new Two(_807, _806.value0.value0, _806.value0.value1, _806.value0.value2.value0), _806.value0.value2.value1, _806.value0.value2.value2, new Two(_806.value0.value2.value3, _806.value0.value2.value4, _806.value0.value2.value5, _806.value0.value2.value6), _806.value0.value3, _806.value0.value4, _806.value0.value5));
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof ThreeMiddle && _806.value0.value0 instanceof Three)) {
                          return fromZipper(__dict_Ord_18)(_806.value1)(new Three(new Two(_806.value0.value0.value0, _806.value0.value0.value1, _806.value0.value0.value2, _806.value0.value0.value3), _806.value0.value0.value4, _806.value0.value0.value5, new Two(_806.value0.value0.value6, _806.value0.value1, _806.value0.value2, _807), _806.value0.value3, _806.value0.value4, _806.value0.value5));
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof ThreeMiddle && _806.value0.value5 instanceof Three)) {
                          return fromZipper(__dict_Ord_18)(_806.value1)(new Three(_806.value0.value0, _806.value0.value1, _806.value0.value2, new Two(_807, _806.value0.value3, _806.value0.value4, _806.value0.value5.value0), _806.value0.value5.value1, _806.value0.value5.value2, new Two(_806.value0.value5.value3, _806.value0.value5.value4, _806.value0.value5.value5, _806.value0.value5.value6)));
                      };
                      if (_806 instanceof Data_List.Cons && (_806.value0 instanceof ThreeRight && _806.value0.value3 instanceof Three)) {
                          return fromZipper(__dict_Ord_18)(_806.value1)(new Three(_806.value0.value0, _806.value0.value1, _806.value0.value2, new Two(_806.value0.value3.value0, _806.value0.value3.value1, _806.value0.value3.value2, _806.value0.value3.value3), _806.value0.value3.value4, _806.value0.value3.value5, new Two(_806.value0.value3.value6, _806.value0.value4, _806.value0.value5, _807)));
                      };
                      throw new Error("Failed pattern match at Data.Map line 170, column 1 - line 171, column 1: " + [ _806.constructor.name, _807.constructor.name ]);
                  };
              };
          };
      };
      var removeMaxNode = function (__copy___dict_Ord_19) {
          return function (__copy_ctx) {
              return function (__copy__809) {
                  var __dict_Ord_19 = __copy___dict_Ord_19;
                  var ctx = __copy_ctx;
                  var _809 = __copy__809;
                  tco: while (true) {
                      var ctx_1 = ctx;
                      if (_809 instanceof Two && (_809.value0 instanceof Leaf && _809.value3 instanceof Leaf)) {
                          return up(__dict_Ord_19)(ctx_1)(Leaf.value);
                      };
                      var ctx_1 = ctx;
                      if (_809 instanceof Two) {
                          var __tco___dict_Ord_19 = __dict_Ord_19;
                          var __tco_ctx = new Data_List.Cons(new TwoRight(_809.value0, _809.value1, _809.value2), ctx_1);
                          var __tco__809 = _809.value3;
                          __dict_Ord_19 = __tco___dict_Ord_19;
                          ctx = __tco_ctx;
                          _809 = __tco__809;
                          continue tco;
                      };
                      var ctx_1 = ctx;
                      if (_809 instanceof Three && (_809.value0 instanceof Leaf && (_809.value3 instanceof Leaf && _809.value6 instanceof Leaf))) {
                          return up(__dict_Ord_19)(new Data_List.Cons(new TwoRight(Leaf.value, _809.value1, _809.value2), ctx_1))(Leaf.value);
                      };
                      if (_809 instanceof Three) {
                          var __tco___dict_Ord_19 = __dict_Ord_19;
                          var __tco_ctx = new Data_List.Cons(new ThreeRight(_809.value0, _809.value1, _809.value2, _809.value3, _809.value4, _809.value5), ctx);
                          var __tco__809 = _809.value6;
                          __dict_Ord_19 = __tco___dict_Ord_19;
                          ctx = __tco_ctx;
                          _809 = __tco__809;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.Map line 170, column 1 - line 171, column 1: " + [ ctx.constructor.name, _809.constructor.name ]);
                  };
              };
          };
      };
      var maxNode = function (__copy___dict_Ord_20) {
          return function (__copy__808) {
              var __dict_Ord_20 = __copy___dict_Ord_20;
              var _808 = __copy__808;
              tco: while (true) {
                  if (_808 instanceof Two && _808.value3 instanceof Leaf) {
                      return {
                          key: _808.value1, 
                          value: _808.value2
                      };
                  };
                  if (_808 instanceof Two) {
                      var __tco___dict_Ord_20 = __dict_Ord_20;
                      var __tco__808 = _808.value3;
                      __dict_Ord_20 = __tco___dict_Ord_20;
                      _808 = __tco__808;
                      continue tco;
                  };
                  if (_808 instanceof Three && _808.value6 instanceof Leaf) {
                      return {
                          key: _808.value4, 
                          value: _808.value5
                      };
                  };
                  if (_808 instanceof Three) {
                      var __tco___dict_Ord_20 = __dict_Ord_20;
                      var __tco__808 = _808.value6;
                      __dict_Ord_20 = __tco___dict_Ord_20;
                      _808 = __tco__808;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.Map line 170, column 1 - line 171, column 1: " + [ _808.constructor.name ]);
              };
          };
      };
      var down = function (__copy___dict_Ord_21) {
          return function (__copy_ctx) {
              return function (__copy_k) {
                  return function (__copy__805) {
                      var __dict_Ord_21 = __copy___dict_Ord_21;
                      var ctx = __copy_ctx;
                      var k = __copy_k;
                      var _805 = __copy__805;
                      tco: while (true) {
                          var ctx_1 = ctx;
                          if (_805 instanceof Leaf) {
                              return fromZipper(__dict_Ord_21)(ctx_1)(Leaf.value);
                          };
                          var ctx_1 = ctx;
                          var k_1 = k;
                          if (_805 instanceof Two && (_805.value0 instanceof Leaf && (_805.value3 instanceof Leaf && Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k_1)(_805.value1)))) {
                              return up(__dict_Ord_21)(ctx_1)(Leaf.value);
                          };
                          var ctx_1 = ctx;
                          var k_1 = k;
                          if (_805 instanceof Two) {
                              if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k_1)(_805.value1)) {
                                  var max = maxNode(__dict_Ord_21)(_805.value0);
                                  return removeMaxNode(__dict_Ord_21)(new Data_List.Cons(new TwoLeft(max.key, max.value, _805.value3), ctx_1))(_805.value0);
                              };
                              if (Prelude["<"](__dict_Ord_21)(k_1)(_805.value1)) {
                                  var __tco___dict_Ord_21 = __dict_Ord_21;
                                  var __tco_ctx = new Data_List.Cons(new TwoLeft(_805.value1, _805.value2, _805.value3), ctx_1);
                                  var __tco__805 = _805.value0;
                                  __dict_Ord_21 = __tco___dict_Ord_21;
                                  ctx = __tco_ctx;
                                  k = k_1;
                                  _805 = __tco__805;
                                  continue tco;
                              };
                              if (Prelude.otherwise) {
                                  var __tco___dict_Ord_21 = __dict_Ord_21;
                                  var __tco_ctx = new Data_List.Cons(new TwoRight(_805.value0, _805.value1, _805.value2), ctx_1);
                                  var __tco__805 = _805.value3;
                                  __dict_Ord_21 = __tco___dict_Ord_21;
                                  ctx = __tco_ctx;
                                  k = k_1;
                                  _805 = __tco__805;
                                  continue tco;
                              };
                          };
                          var ctx_1 = ctx;
                          var k_1 = k;
                          if (_805 instanceof Three && (_805.value0 instanceof Leaf && (_805.value3 instanceof Leaf && _805.value6 instanceof Leaf))) {
                              if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k_1)(_805.value1)) {
                                  return fromZipper(__dict_Ord_21)(ctx_1)(new Two(Leaf.value, _805.value4, _805.value5, Leaf.value));
                              };
                              if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k_1)(_805.value4)) {
                                  return fromZipper(__dict_Ord_21)(ctx_1)(new Two(Leaf.value, _805.value1, _805.value2, Leaf.value));
                              };
                          };
                          if (_805 instanceof Three) {
                              if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_805.value1)) {
                                  var max = maxNode(__dict_Ord_21)(_805.value0);
                                  return removeMaxNode(__dict_Ord_21)(new Data_List.Cons(new ThreeLeft(max.key, max.value, _805.value3, _805.value4, _805.value5, _805.value6), ctx))(_805.value0);
                              };
                              if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_805.value4)) {
                                  var max = maxNode(__dict_Ord_21)(_805.value3);
                                  return removeMaxNode(__dict_Ord_21)(new Data_List.Cons(new ThreeMiddle(_805.value0, _805.value1, _805.value2, max.key, max.value, _805.value6), ctx))(_805.value3);
                              };
                              if (Prelude["<"](__dict_Ord_21)(k)(_805.value1)) {
                                  var __tco___dict_Ord_21 = __dict_Ord_21;
                                  var __tco_ctx = new Data_List.Cons(new ThreeLeft(_805.value1, _805.value2, _805.value3, _805.value4, _805.value5, _805.value6), ctx);
                                  var __tco_k = k;
                                  var __tco__805 = _805.value0;
                                  __dict_Ord_21 = __tco___dict_Ord_21;
                                  ctx = __tco_ctx;
                                  k = __tco_k;
                                  _805 = __tco__805;
                                  continue tco;
                              };
                              if (Prelude["<"](__dict_Ord_21)(_805.value1)(k) && Prelude["<"](__dict_Ord_21)(k)(_805.value4)) {
                                  var __tco___dict_Ord_21 = __dict_Ord_21;
                                  var __tco_ctx = new Data_List.Cons(new ThreeMiddle(_805.value0, _805.value1, _805.value2, _805.value4, _805.value5, _805.value6), ctx);
                                  var __tco_k = k;
                                  var __tco__805 = _805.value3;
                                  __dict_Ord_21 = __tco___dict_Ord_21;
                                  ctx = __tco_ctx;
                                  k = __tco_k;
                                  _805 = __tco__805;
                                  continue tco;
                              };
                              if (Prelude.otherwise) {
                                  var __tco___dict_Ord_21 = __dict_Ord_21;
                                  var __tco_ctx = new Data_List.Cons(new ThreeRight(_805.value0, _805.value1, _805.value2, _805.value3, _805.value4, _805.value5), ctx);
                                  var __tco_k = k;
                                  var __tco__805 = _805.value6;
                                  __dict_Ord_21 = __tco___dict_Ord_21;
                                  ctx = __tco_ctx;
                                  k = __tco_k;
                                  _805 = __tco__805;
                                  continue tco;
                              };
                          };
                          throw new Error("Failed pattern match at Data.Map line 170, column 1 - line 171, column 1: " + [ ctx.constructor.name, k.constructor.name, _805.constructor.name ]);
                      };
                  };
              };
          };
      };
      return down(__dict_Ord_17)(Data_List.Nil.value);
  };
  exports["size"] = size;
  exports["values"] = values;
  exports["keys"] = keys;
  exports["member"] = member;
  exports["delete"] = $$delete;
  exports["fromList"] = fromList;
  exports["toList"] = toList;
  exports["lookup"] = lookup;
  exports["insert"] = insert;
  exports["empty"] = empty;
  exports["functorMap"] = functorMap;;
 
})(PS["Data.Map"] = PS["Data.Map"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];     
  var Set = (function () {
      function Set(value0) {
          this.value0 = value0;
      };
      Set.create = function (value0) {
          return new Set(value0);
      };
      return Set;
  })();
  var toList = function (_817) {
      return Prelude.map(Data_List.functorList)(Data_Tuple.fst)(Data_Map.toList(_817.value0));
  };
  var size = function (_818) {
      return Data_Map.size(_818.value0);
  };
  var member = function (__dict_Ord_4) {
      return function (a) {
          return function (_814) {
              return Data_Map.member(__dict_Ord_4)(a)(_814.value0);
          };
      };
  };
  var insert = function (__dict_Ord_5) {
      return function (a) {
          return function (_815) {
              return new Set(Data_Map.insert(__dict_Ord_5)(a)(Prelude.unit)(_815.value0));
          };
      };
  };
  var foldableSet = new Data_Foldable.Foldable(function (__dict_Monoid_6) {
      return function (f) {
          return function (_3507) {
              return Data_Foldable.foldMap(Data_List.foldableList)(__dict_Monoid_6)(f)(toList(_3507));
          };
      };
  }, function (f) {
      return function (x) {
          return function (_3508) {
              return Data_Foldable.foldl(Data_List.foldableList)(f)(x)(toList(_3508));
          };
      };
  }, function (f) {
      return function (x) {
          return function (_3509) {
              return Data_Foldable.foldr(Data_List.foldableList)(f)(x)(toList(_3509));
          };
      };
  });
  var empty = new Set(Data_Map.empty);
  var fromList = function (__dict_Ord_8) {
      return Data_Foldable.foldl(Data_List.foldableList)(function (m) {
          return function (a) {
              return insert(__dict_Ord_8)(a)(m);
          };
      })(empty);
  };
  var $$delete = function (__dict_Ord_11) {
      return function (a) {
          return function (_816) {
              return new Set(Data_Map["delete"](__dict_Ord_11)(a)(_816.value0));
          };
      };
  };
  var difference = function (__dict_Ord_12) {
      return function (s1) {
          return function (s2) {
              return Data_Foldable.foldl(Data_List.foldableList)(Prelude.flip($$delete(__dict_Ord_12)))(s1)(toList(s2));
          };
      };
  };
  exports["difference"] = difference;
  exports["size"] = size;
  exports["fromList"] = fromList;
  exports["toList"] = toList;
  exports["member"] = member;
  exports["insert"] = insert;
  exports["empty"] = empty;
  exports["foldableSet"] = foldableSet;;
 
})(PS["Data.Set"] = PS["Data.Set"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];     
  var PrettyPrint = function (prettyPrint) {
      this.prettyPrint = prettyPrint;
  };
  var prettyPrint = function (dict) {
      return dict.prettyPrint;
  };
  var parensIf = function (cond) {
      return function (s) {
          if (cond) {
              return "(" + (s + ")");
          };
          if (!cond) {
              return s;
          };
          throw new Error("Failed pattern match at Data.PrettyPrint line 13, column 1 - line 14, column 1: " + [ cond.constructor.name ]);
      };
  };
  exports["PrettyPrint"] = PrettyPrint;
  exports["parensIf"] = parensIf;
  exports["prettyPrint"] = prettyPrint;;
 
})(PS["Data.PrettyPrint"] = PS["Data.PrettyPrint"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Generic = PS["Data.Generic"];
  var Data_PrettyPrint = PS["Data.PrettyPrint"];     
  var Var = (function () {
      function Var(value0) {
          this.value0 = value0;
      };
      Var.create = function (value0) {
          return new Var(value0);
      };
      return Var;
  })();
  var Lambda = (function () {
      function Lambda(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Lambda.create = function (value0) {
          return function (value1) {
              return new Lambda(value0, value1);
          };
      };
      return Lambda;
  })();
  var Apply = (function () {
      function Apply(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Apply.create = function (value0) {
          return function (value1) {
              return new Apply(value0, value1);
          };
      };
      return Apply;
  })();
  var isLambda = function (_644) {
      if (_644 instanceof Lambda) {
          return true;
      };
      return false;
  };
  var isComposite = function (_643) {
      if (_643 instanceof Var) {
          return false;
      };
      return true;
  };
  var prettyPrintSyntax = new Data_PrettyPrint.PrettyPrint((function () {
      var walk = function (e) {
          if (e instanceof Var) {
              return e.value0;
          };
          if (e instanceof Lambda) {
              return "\u03bb" + (e.value0 + (". " + walk(e.value1)));
          };
          if (e instanceof Apply) {
              return Data_PrettyPrint.parensIf(isLambda(e.value0))(walk(e.value0)) + (" " + Data_PrettyPrint.parensIf(isComposite(e.value1))(walk(e.value1)));
          };
          throw new Error("Failed pattern match at Data.Syntax line 37, column 1 - line 47, column 84: " + [ e.constructor.name ]);
      };
      return walk;
  })());
  exports["Var"] = Var;
  exports["Lambda"] = Lambda;
  exports["Apply"] = Apply;
  exports["prettyPrintSyntax"] = prettyPrintSyntax;;
 
})(PS["Data.Syntax"] = PS["Data.Syntax"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.String

  exports._charAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
        };
      };
    };
  };

  exports.fromCharArray = function (a) {
    return a.join("");
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substr(n);
    };
  };

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };
 
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Char

  exports.toString = function (c) {
    return c;
  };
 
})(PS["Data.Char"] = PS["Data.Char"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Char"];
  var Prelude = PS["Prelude"];
  exports["toString"] = $foreign.toString;;
 
})(PS["Data.Char"] = PS["Data.Char"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var Data_Char = PS["Data.Char"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];                                          
  var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);      
  var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["indexOf"] = indexOf;
  exports["charAt"] = charAt;
  exports["split"] = $foreign.split;
  exports["drop"] = $foreign.drop;
  exports["length"] = $foreign.length;
  exports["fromCharArray"] = $foreign.fromCharArray;;
 
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff

  exports.returnE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];     
  var monadEff = new Prelude.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Prelude.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Prelude.Apply(function () {
      return functorEff;
  }, Prelude.ap(monadEff));
  var applicativeEff = new Prelude.Applicative(function () {
      return applyEff;
  }, $foreign.returnE);
  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;;
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  /* global exports, console */
  "use strict";

  // module Control.Monad.Eff.Console

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
 
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["log"] = $foreign.log;;
 
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Alt = PS["Control.Alt"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Map = PS["Data.Map"];
  var Data_Set = PS["Data.Set"];
  var Data_Array_Unsafe = PS["Data.Array.Unsafe"];
  var Data_String = PS["Data.String"];
  var Data_List = PS["Data.List"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Data_Syntax = PS["Data.Syntax"];
  var Data_PrettyPrint = PS["Data.PrettyPrint"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Bound = (function () {
      function Bound(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bound.create = function (value0) {
          return function (value1) {
              return new Bound(value0, value1);
          };
      };
      return Bound;
  })();
  var Free = (function () {
      function Free(value0) {
          this.value0 = value0;
      };
      Free.create = function (value0) {
          return new Free(value0);
      };
      return Free;
  })();
  var Bind = (function () {
      function Bind(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bind.create = function (value0) {
          return function (value1) {
              return new Bind(value0, value1);
          };
      };
      return Bind;
  })();
  var App = (function () {
      function App(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      App.create = function (value0) {
          return function (value1) {
              return new App(value0, value1);
          };
      };
      return App;
  })();
  var syntaxToExpr = (function () {
      var loop = function (env) {
          return function (a) {
              if (a instanceof Data_Syntax.Var) {
                  return Data_Maybe.maybe(new Free(a.value0))(Bound.create(a.value0))(Data_Map.lookup(Prelude.ordString)(a.value0)(env));
              };
              if (a instanceof Data_Syntax.Lambda) {
                  var env$prime = Data_Map.insert(Prelude.ordString)(a.value0)(0)(Prelude.map(Data_Map.functorMap)(function (_18) {
                      return _18 + 1 | 0;
                  })(env));
                  return new Bind(a.value0, loop(env$prime)(a.value1));
              };
              if (a instanceof Data_Syntax.Apply) {
                  return new App(loop(env)(a.value0), loop(env)(a.value1));
              };
              throw new Error("Failed pattern match at Data.Expr line 47, column 1 - line 48, column 1: " + [ a.constructor.name ]);
          };
      };
      return loop(Data_Map.empty);
  })();
  var substitute = function (v) {
      var walk = function (index) {
          return function (e) {
              if (e instanceof Bound) {
                  if (e.value1 === index) {
                      return v;
                  };
                  if (Prelude.otherwise) {
                      return new Bound(e.value0, e.value1);
                  };
              };
              if (e instanceof Free) {
                  return new Free(e.value0);
              };
              if (e instanceof Bind) {
                  return new Bind(e.value0, walk(index + 1 | 0)(e.value1));
              };
              if (e instanceof App) {
                  return new App(walk(index)(e.value0), walk(index)(e.value1));
              };
              throw new Error("Failed pattern match at Data.Expr line 138, column 1 - line 139, column 1: " + [ e.constructor.name ]);
          };
      };
      return walk;
  };                                                                                                                            
  var step = function (env) {
      return function (e) {
          if (e instanceof App && e.value0 instanceof Bind) {
              return Prelude["return"](Data_Maybe.applicativeMaybe)(substitute(e.value1)(0)(e.value0.value1));
          };
          if (e instanceof App) {
              return Control_Alt["<|>"](Data_Maybe.altMaybe)(Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(App.create)(step(env)(e.value0)))(Prelude.pure(Data_Maybe.applicativeMaybe)(e.value1)))(Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(App.create)(Prelude.pure(Data_Maybe.applicativeMaybe)(e.value0)))(step(env)(e.value1)));
          };
          if (e instanceof Bind) {
              return Prelude["<$>"](Data_Maybe.functorMaybe)(Bind.create(e.value0))(step(env)(e.value1));
          };
          if (e instanceof Free) {
              return Data_Map.lookup(Prelude.ordString)(e.value0)(env);
          };
          if (e instanceof Bound) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match: " + [ e.constructor.name ]);
      };
  };    
  var globalNames = Prelude[">>>"](Prelude.semigroupoidFn)(Data_Map.keys)(Prelude[">>>"](Prelude.semigroupoidFn)(Data_List.toList(Data_List.foldableList))(Data_Set.fromList(Prelude.ordString)));
  var freeVars = (function () {
      var walk = function (vars) {
          return function (e) {
              if (e instanceof Bound) {
                  return vars;
              };
              if (e instanceof Free) {
                  return Data_Set.insert(Prelude.ordString)(e.value0)(vars);
              };
              if (e instanceof Bind) {
                  return walk(vars)(e.value1);
              };
              if (e instanceof App) {
                  return walk(walk(vars)(e.value0))(e.value1);
              };
              throw new Error("Failed pattern match at Data.Expr line 68, column 1 - line 69, column 1: " + [ e.constructor.name ]);
          };
      };
      return walk(Data_Set.empty);
  })();
  var namesReferencing = function (name) {
      var step_1 = function (keys) {
          return function (_823) {
              if (Data_Set.member(Prelude.ordString)(name)(freeVars(_823.value1))) {
                  return Data_Set.insert(Prelude.ordString)(_823.value0)(keys);
              };
              if (Prelude.otherwise) {
                  return keys;
              };
              throw new Error("Failed pattern match at Data.Expr line 91, column 3 - line 95, column 1: " + [ keys.constructor.name, _823.constructor.name ]);
          };
      };
      return Prelude[">>>"](Prelude.semigroupoidFn)(Data_Map.toList)(Data_Foldable.foldl(Data_List.foldableList)(step_1)(Data_Set.empty));
  };
  var undefinedNames = function (expr) {
      return function (env) {
          return Data_Set.difference(Prelude.ordString)(freeVars(expr))(globalNames(env));
      };
  };
  var formatUndefinedWarning = function (name) {
      return function (names) {
          return "Deleted definition " + (name + (" is still referenced by " + Data_Foldable.intercalate(Data_Set.foldableSet)(Data_Monoid.monoidString)(", ")(names)));
      };
  };
  var formatUndefinedError = function (text) {
      return function (missing) {
          return "No top-level definition for " + (Data_Foldable.intercalate(Data_Set.foldableSet)(Data_Monoid.monoidString)(", ")(missing) + (" referenced in\n" + text));
      };
  };
  var exprToSyntax = function (e) {
      if (e instanceof Bound) {
          return new Data_Syntax.Var(e.value0);
      };
      if (e instanceof Free) {
          return new Data_Syntax.Var(e.value0);
      };
      if (e instanceof Bind) {
          return new Data_Syntax.Lambda(e.value0, exprToSyntax(e.value1));
      };
      if (e instanceof App) {
          return new Data_Syntax.Apply(exprToSyntax(e.value0), exprToSyntax(e.value1));
      };
      throw new Error("Failed pattern match: " + [ e.constructor.name ]);
  };
  exports["Bound"] = Bound;
  exports["Free"] = Free;
  exports["Bind"] = Bind;
  exports["App"] = App;
  exports["step"] = step;
  exports["substitute"] = substitute;
  exports["formatUndefinedWarning"] = formatUndefinedWarning;
  exports["formatUndefinedError"] = formatUndefinedError;
  exports["namesReferencing"] = namesReferencing;
  exports["undefinedNames"] = undefinedNames;
  exports["globalNames"] = globalNames;
  exports["freeVars"] = freeVars;
  exports["exprToSyntax"] = exprToSyntax;
  exports["syntaxToExpr"] = syntaxToExpr;;
 
})(PS["Data.Expr"] = PS["Data.Expr"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Identity = function (x) {
      return x;
  };
  var runIdentity = function (_446) {
      return _446;
  };
  var functorIdentity = new Prelude.Functor(function (f) {
      return function (_469) {
          return f(_469);
      };
  });
  var applyIdentity = new Prelude.Apply(function () {
      return functorIdentity;
  }, function (_470) {
      return function (_471) {
          return _470(_471);
      };
  });
  var bindIdentity = new Prelude.Bind(function () {
      return applyIdentity;
  }, function (_472) {
      return function (f) {
          return f(_472);
      };
  });
  var applicativeIdentity = new Prelude.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Prelude.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["runIdentity"] = runIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;;
 
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_String = PS["Data.String"];
  var Data_Foldable = PS["Data.Foldable"];     
  var Position = (function () {
      function Position(value0) {
          this.value0 = value0;
      };
      Position.create = function (value0) {
          return new Position(value0);
      };
      return Position;
  })();
  var updatePosString = function (pos) {
      return function (str) {
          var updatePosChar = function (_367) {
              return function (c) {
                  if (c === "\n") {
                      return new Position({
                          line: _367.value0.line + 1 | 0, 
                          column: 1
                      });
                  };
                  if (c === "\r") {
                      return new Position({
                          line: _367.value0.line + 1 | 0, 
                          column: 1
                      });
                  };
                  if (c === "\t") {
                      return new Position({
                          line: _367.value0.line, 
                          column: (_367.value0.column + 8 | 0) - (_367.value0.column - 1) % 8
                      });
                  };
                  return new Position({
                      line: _367.value0.line, 
                      column: _367.value0.column + 1 | 0
                  });
              };
          };
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(updatePosChar)(pos)(Data_String.split("")(str));
      };
  }; 
  var initialPos = new Position({
      line: 1, 
      column: 1
  });
  exports["Position"] = Position;
  exports["updatePosString"] = updatePosString;
  exports["initialPos"] = initialPos;;
 
})(PS["Text.Parsing.Parser.Pos"] = PS["Text.Parsing.Parser.Pos"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Text_Parsing_Parser_Pos = PS["Text.Parsing.Parser.Pos"];     
  var ParseError = (function () {
      function ParseError(value0) {
          this.value0 = value0;
      };
      ParseError.create = function (value0) {
          return new ParseError(value0);
      };
      return ParseError;
  })();
  var PState = (function () {
      function PState(value0) {
          this.value0 = value0;
      };
      PState.create = function (value0) {
          return new PState(value0);
      };
      return PState;
  })();
  var ParserT = function (x) {
      return x;
  };
  var unParserT = function (_894) {
      return _894;
  }; 
  var runParserT = function (__dict_Monad_0) {
      return function (s) {
          return function (p) {
              return Prelude.bind(__dict_Monad_0["__superclass_Prelude.Bind_1"]())(unParserT(p)(s))(function (_78) {
                  return Prelude["return"](__dict_Monad_0["__superclass_Prelude.Applicative_0"]())(_78.result);
              });
          };
      };
  };
  var runParser = function (s) {
      return function (_3829) {
          return Data_Identity.runIdentity(runParserT(Data_Identity.monadIdentity)(new PState({
              input: s, 
              position: Text_Parsing_Parser_Pos.initialPos
          }))(_3829));
      };
  };
  var parseFailed = function (s) {
      return function (pos) {
          return function (message) {
              return {
                  input: s, 
                  consumed: false, 
                  result: new Data_Either.Left(new ParseError({
                      message: message, 
                      position: pos
                  })), 
                  position: pos
              };
          };
      };
  }; 
  var lazyParserT = new Control_Lazy.Lazy(function (f) {
      return ParserT(function (s) {
          return unParserT(f(Prelude.unit))(s);
      });
  });
  var functorParserT = function (__dict_Functor_5) {
      return new Prelude.Functor(function (f) {
          return function (p) {
              var f$prime = function (o) {
                  return {
                      input: o.input, 
                      result: Prelude["<$>"](Data_Either.functorEither)(f)(o.result), 
                      consumed: o.consumed, 
                      position: o.position
                  };
              };
              return ParserT(function (s) {
                  return Prelude["<$>"](__dict_Functor_5)(f$prime)(unParserT(p)(s));
              });
          };
      });
  };
  var fail = function (__dict_Monad_6) {
      return function (message) {
          return ParserT(function (_893) {
              return Prelude["return"](__dict_Monad_6["__superclass_Prelude.Applicative_0"]())(parseFailed(_893.value0.input)(_893.value0.position)(message));
          });
      };
  };
  var monadParserT = function (__dict_Monad_4) {
      return new Prelude.Monad(function () {
          return applicativeParserT(__dict_Monad_4);
      }, function () {
          return bindParserT(__dict_Monad_4);
      });
  };
  var bindParserT = function (__dict_Monad_9) {
      return new Prelude.Bind(function () {
          return applyParserT(__dict_Monad_9);
      }, function (p) {
          return function (f) {
              var updateConsumedFlag = function (c) {
                  return function (o) {
                      return {
                          input: o.input, 
                          consumed: c || o.consumed, 
                          result: o.result, 
                          position: o.position
                      };
                  };
              };
              return ParserT(function (s) {
                  return Prelude[">>="](__dict_Monad_9["__superclass_Prelude.Bind_1"]())(unParserT(p)(s))(function (o) {
                      if (o.result instanceof Data_Either.Left) {
                          return Prelude["return"](__dict_Monad_9["__superclass_Prelude.Applicative_0"]())({
                              input: o.input, 
                              result: new Data_Either.Left(o.result.value0), 
                              consumed: o.consumed, 
                              position: o.position
                          });
                      };
                      if (o.result instanceof Data_Either.Right) {
                          return Prelude["<$>"](((__dict_Monad_9["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(updateConsumedFlag(o.consumed))(unParserT(f(o.result.value0))(new PState({
                              input: o.input, 
                              position: o.position
                          })));
                      };
                      throw new Error("Failed pattern match: " + [ o.result.constructor.name ]);
                  });
              });
          };
      });
  };
  var applyParserT = function (__dict_Monad_10) {
      return new Prelude.Apply(function () {
          return functorParserT(((__dict_Monad_10["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
      }, Prelude.ap(monadParserT(__dict_Monad_10)));
  };
  var applicativeParserT = function (__dict_Monad_11) {
      return new Prelude.Applicative(function () {
          return applyParserT(__dict_Monad_11);
      }, function (a) {
          return ParserT(function (_889) {
              return Prelude.pure(__dict_Monad_11["__superclass_Prelude.Applicative_0"]())({
                  input: _889.value0.input, 
                  result: new Data_Either.Right(a), 
                  consumed: false, 
                  position: _889.value0.position
              });
          });
      });
  };
  var altParserT = function (__dict_Monad_13) {
      return new Control_Alt.Alt(function () {
          return functorParserT(((__dict_Monad_13["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
      }, function (p1) {
          return function (p2) {
              return ParserT(function (s) {
                  return Prelude[">>="](__dict_Monad_13["__superclass_Prelude.Bind_1"]())(unParserT(p1)(s))(function (o) {
                      if (o.result instanceof Data_Either.Left && !o.consumed) {
                          return unParserT(p2)(s);
                      };
                      return Prelude["return"](__dict_Monad_13["__superclass_Prelude.Applicative_0"]())(o);
                  });
              });
          };
      });
  };
  var plusParserT = function (__dict_Monad_7) {
      return new Control_Plus.Plus(function () {
          return altParserT(__dict_Monad_7);
      }, fail(__dict_Monad_7)("No alternative"));
  };
  var alternativeParserT = function (__dict_Monad_12) {
      return new Control_Alternative.Alternative(function () {
          return plusParserT(__dict_Monad_12);
      }, function () {
          return applicativeParserT(__dict_Monad_12);
      });
  };
  exports["ParserT"] = ParserT;
  exports["PState"] = PState;
  exports["ParseError"] = ParseError;
  exports["parseFailed"] = parseFailed;
  exports["fail"] = fail;
  exports["runParser"] = runParser;
  exports["runParserT"] = runParserT;
  exports["unParserT"] = unParserT;
  exports["functorParserT"] = functorParserT;
  exports["applyParserT"] = applyParserT;
  exports["applicativeParserT"] = applicativeParserT;
  exports["altParserT"] = altParserT;
  exports["plusParserT"] = plusParserT;
  exports["alternativeParserT"] = alternativeParserT;
  exports["bindParserT"] = bindParserT;
  exports["monadParserT"] = monadParserT;
  exports["lazyParserT"] = lazyParserT;;
 
})(PS["Text.Parsing.Parser"] = PS["Text.Parsing.Parser"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Either = PS["Data.Either"];
  var Data_List = PS["Data.List"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var $$try = function (__dict_Functor_1) {
      return function (p) {
          var try$prime = function (s) {
              return function (pos) {
                  return function (_899) {
                      if (_899.result instanceof Data_Either.Left) {
                          return {
                              input: s, 
                              result: _899.result, 
                              consumed: false, 
                              position: pos
                          };
                      };
                      return _899;
                  };
              };
          };
          return Text_Parsing_Parser.ParserT(function (_896) {
              return Prelude["<$>"](__dict_Functor_1)(try$prime(_896.value0.input)(_896.value0.position))(Text_Parsing_Parser.unParserT(p)(new Text_Parsing_Parser.PState({
                  input: _896.value0.input, 
                  position: _896.value0.position
              })));
          });
      };
  };
  var between = function (__dict_Monad_25) {
      return function (open) {
          return function (close) {
              return function (p) {
                  return Prelude.bind(Text_Parsing_Parser.bindParserT(__dict_Monad_25))(open)(function () {
                      return Prelude.bind(Text_Parsing_Parser.bindParserT(__dict_Monad_25))(p)(function (_79) {
                          return Prelude.bind(Text_Parsing_Parser.bindParserT(__dict_Monad_25))(close)(function () {
                              return Prelude["return"](Text_Parsing_Parser.applicativeParserT(__dict_Monad_25))(_79);
                          });
                      });
                  });
              };
          };
      };
  };
  exports["try"] = $$try;
  exports["between"] = between;;
 
})(PS["Text.Parsing.Parser.Combinators"] = PS["Text.Parsing.Parser.Combinators"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_String = PS["Data.String"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Char = PS["Data.Char"];
  var Data_Array = PS["Data.Array"];
  var Data_List = PS["Data.List"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_Pos = PS["Text.Parsing.Parser.Pos"];     
  var string = function (__dict_Monad_0) {
      return function (str) {
          return Text_Parsing_Parser.ParserT(function (_902) {
              return Prelude["return"](__dict_Monad_0["__superclass_Prelude.Applicative_0"]())((function () {
                  var _3898 = Data_String.indexOf(str)(_902.value0.input);
                  if (_3898 instanceof Data_Maybe.Just && _3898.value0 === 0) {
                      return {
                          consumed: true, 
                          input: Data_String.drop(Data_String.length(str))(_902.value0.input), 
                          result: new Data_Either.Right(str), 
                          position: Text_Parsing_Parser_Pos.updatePosString(_902.value0.position)(str)
                      };
                  };
                  return Text_Parsing_Parser.parseFailed(_902.value0.input)(_902.value0.position)("Expected " + str);
              })());
          });
      };
  };
  var eof = function (__dict_Monad_1) {
      return Text_Parsing_Parser.ParserT(function (_901) {
          return Prelude["return"](__dict_Monad_1["__superclass_Prelude.Applicative_0"]())((function () {
              if (_901.value0.input === "") {
                  return {
                      consumed: false, 
                      input: _901.value0.input, 
                      result: new Data_Either.Right(Prelude.unit), 
                      position: _901.value0.position
                  };
              };
              return Text_Parsing_Parser.parseFailed(_901.value0.input)(_901.value0.position)("Expected EOF");
          })());
      });
  };
  var anyChar = function (__dict_Monad_2) {
      return Text_Parsing_Parser.ParserT(function (_903) {
          return Prelude["return"](__dict_Monad_2["__superclass_Prelude.Applicative_0"]())((function () {
              var _3909 = Data_String.charAt(0)(_903.value0.input);
              if (_3909 instanceof Data_Maybe.Nothing) {
                  return Text_Parsing_Parser.parseFailed(_903.value0.input)(_903.value0.position)("Unexpected EOF");
              };
              if (_3909 instanceof Data_Maybe.Just) {
                  return {
                      consumed: true, 
                      input: Data_String.drop(1)(_903.value0.input), 
                      result: new Data_Either.Right(_3909.value0), 
                      position: Text_Parsing_Parser_Pos.updatePosString(_903.value0.position)(Data_Char.toString(_3909.value0))
                  };
              };
              throw new Error("Failed pattern match at Text.Parsing.Parser.String line 40, column 1 - line 41, column 1: " + [ _3909.constructor.name ]);
          })());
      });
  };
  var satisfy = function (__dict_Monad_3) {
      return function (f) {
          return Text_Parsing_Parser_Combinators["try"](((__dict_Monad_3["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.bind(Text_Parsing_Parser.bindParserT(__dict_Monad_3))(anyChar(__dict_Monad_3))(function (_110) {
              var _3915 = f(_110);
              if (_3915) {
                  return Prelude["return"](Text_Parsing_Parser.applicativeParserT(__dict_Monad_3))(_110);
              };
              if (!_3915) {
                  return Text_Parsing_Parser.fail(__dict_Monad_3)("Character did not satisfy predicate");
              };
              throw new Error("Failed pattern match at Text.Parsing.Parser.String line 47, column 1 - line 48, column 1: " + [ _3915.constructor.name ]);
          }));
      };
  };
  var whiteSpace = function (__dict_Monad_7) {
      return Prelude.bind(Text_Parsing_Parser.bindParserT(__dict_Monad_7))(Data_Array.many(Text_Parsing_Parser.alternativeParserT(__dict_Monad_7))(Text_Parsing_Parser.lazyParserT)(satisfy(__dict_Monad_7)(function (c) {
          return Prelude["=="](Prelude.eqChar)(c)("\n") || (Prelude["=="](Prelude.eqChar)(c)("\r") || (Prelude["=="](Prelude.eqChar)(c)(" ") || Prelude["=="](Prelude.eqChar)(c)("\t")));
      })))(function (_111) {
          return Prelude["return"](Text_Parsing_Parser.applicativeParserT(__dict_Monad_7))(Data_String.fromCharArray(_111));
      });
  };
  var skipSpaces = function (__dict_Monad_8) {
      return Prelude.bind(Text_Parsing_Parser.bindParserT(__dict_Monad_8))(whiteSpace(__dict_Monad_8))(function () {
          return Prelude["return"](Text_Parsing_Parser.applicativeParserT(__dict_Monad_8))(Prelude.unit);
      });
  };
  exports["skipSpaces"] = skipSpaces;
  exports["whiteSpace"] = whiteSpace;
  exports["satisfy"] = satisfy;
  exports["anyChar"] = anyChar;
  exports["string"] = string;
  exports["eof"] = eof;;
 
})(PS["Text.Parsing.Parser.String"] = PS["Text.Parsing.Parser.String"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Either.Unsafe

  exports.unsafeThrow = function (msg) {
    throw new Error(msg);
  };
 
})(PS["Data.Either.Unsafe"] = PS["Data.Either.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Either.Unsafe"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];     
  var fromRight = function (_439) {
      if (_439 instanceof Data_Either.Right) {
          return _439.value0;
      };
      return $foreign.unsafeThrow("Data.Either.Unsafe.fromRight called on Left value");
  };
  exports["fromRight"] = fromRight;;
 
})(PS["Data.Either.Unsafe"] = PS["Data.Either.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = PS["Text.Parsing.Parser.String"];
  var Text_Parsing_Parser_Pos = PS["Text.Parsing.Parser.Pos"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Array = PS["Data.Array"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_String = PS["Data.String"];
  var Data_Either = PS["Data.Either"];
  var Data_Either_Unsafe = PS["Data.Either.Unsafe"];
  var Data_Syntax = PS["Data.Syntax"];
  var Data_Identity = PS["Data.Identity"];     
  var token = function (p) {
      return Control_Apply["<*"](Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(p)(Text_Parsing_Parser_String.skipSpaces(Data_Identity.monadIdentity));
  };
  var parseAll = function (p) {
      return function (s) {
          return Text_Parsing_Parser.runParser(s)(Control_Apply["<*"](Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.skipSpaces(Data_Identity.monadIdentity))(p))(Text_Parsing_Parser_String.eof(Data_Identity.monadIdentity)));
      };
  };
  var unsafeParse = function (p) {
      return function (s) {
          return Data_Either_Unsafe.fromRight(parseAll(p)(s));
      };
  };
  var parens = Text_Parsing_Parser_Combinators.between(Data_Identity.monadIdentity)(token(Text_Parsing_Parser_String.string(Data_Identity.monadIdentity)("(")))(token(Text_Parsing_Parser_String.string(Data_Identity.monadIdentity)(")")));
  var isLower = function (c) {
      return Prelude["<="](Prelude.ordChar)("a")(c) && Prelude["<="](Prelude.ordChar)(c)("z");
  };
  var isDigit = function (c) {
      return Prelude["<="](Prelude.ordChar)("0")(c) && Prelude["<="](Prelude.ordChar)(c)("9");
  };
  var formatParseError = function (text) {
      return function (_904) {
          var caretLine = Data_String.fromCharArray(Data_Array.replicate(_904.value0.position.value0.column - 1)(" ")) + "^";
          return "Parse error: " + (_904.value0.message + (" at column " + (Prelude.show(Prelude.showInt)(_904.value0.position.value0.column) + ("\n" + (text + ("\n" + caretLine))))));
      };
  };
  var firstChar = function (c) {
      return isLower(c) || Prelude["=="](Prelude.eqChar)(c)("_");
  };
  var bodyChar = function (c) {
      return isLower(c) || (isDigit(c) || (Prelude["=="](Prelude.eqChar)(c)("-") || (Prelude["=="](Prelude.eqChar)(c)("?") || Prelude["=="](Prelude.eqChar)(c)("'"))));
  };
  var parseName = token(Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.satisfy(Data_Identity.monadIdentity)(firstChar))(function (_115) {
      return Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Array.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Text_Parsing_Parser_String.satisfy(Data_Identity.monadIdentity)(bodyChar)))(function (_114) {
          return Prelude["return"](Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Data_String.fromCharArray(Prelude["<>"](Prelude.semigroupArray)([ _115 ])(_114)));
      });
  }));
  var parseVar = Prelude["<$>"](Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Syntax.Var.create)(parseName);
  var parseSyntax = (function () {
      var parseApply = function (p) {
          var parseLambda = Prelude["<*>"](Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Syntax.Lambda.create)(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(token(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Data_Identity.monadIdentity)("\\"))(Text_Parsing_Parser_String.string(Data_Identity.monadIdentity)("\u03bb"))))(parseName)))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(token(Text_Parsing_Parser_String.string(Data_Identity.monadIdentity)(".")))(p));
          var parseAtom = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(parseLambda)(parseVar))(parens(p));
          return Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(parseAtom)(function (_113) {
              return Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Array.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(parseAtom))(function (_112) {
                  if (_112.length === 0) {
                      return Prelude["return"](Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(_113);
                  };
                  return Prelude["return"](Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Syntax.Apply.create)(_113)(_112));
              });
          });
      };
      return Control_Lazy.fix(Text_Parsing_Parser.lazyParserT)(parseApply);
  })();
  var parseDefinition = Prelude["<*>"](Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(function (_3) {
      return function (_4) {
          return {
              name: _3, 
              syntax: _4
          };
      };
  })(parseName))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(token(Text_Parsing_Parser_String.string(Data_Identity.monadIdentity)("=")))(parseSyntax));
  var parseEither = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators["try"](Data_Identity.functorIdentity)(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Either.Left.create)(parseDefinition)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Either.Right.create)(parseSyntax));
  exports["formatParseError"] = formatParseError;
  exports["unsafeParse"] = unsafeParse;
  exports["parseEither"] = parseEither;
  exports["parseSyntax"] = parseSyntax;
  exports["parseDefinition"] = parseDefinition;
  exports["parseAll"] = parseAll;;
 
})(PS["Data.Parse"] = PS["Data.Parse"] || {});
(function(exports) {
  // module Control.Monad.Eff.Save

  exports.saveTextAs = function(text) {
    return function(filename) {
      return function() {
        var blob = new Blob([text], {type: 'text/plain;charset=utf-8'});
        saveAs(blob, filename);
        return {};
      }
    }
  }

 
})(PS["Control.Monad.Eff.Save"] = PS["Control.Monad.Eff.Save"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Save"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["saveTextAs"] = $foreign.saveTextAs;;
 
})(PS["Control.Monad.Eff.Save"] = PS["Control.Monad.Eff.Save"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module React

  exports.getProps = function(ctx) {
      return function() {
          return ctx.props;
      };
  };

  exports.getChildren = function(ctx) {
    return function() {
      var children = ctx.props.children;

      var result = [];

      React.Children.forEach(children, function(child){
        result.push(child);
      });

      return result;
    };
  };

  exports.writeState = function(ctx) {
      return function(state) {
          return function() {
              ctx.replaceState({
                  state: state
              });
              return function() {
                  return state;
              }
          };
      };
  };

  exports.readState = function(ctx) {
      return function() {
          return ctx.state.state;
      };
  };

  exports.createClass = function(ss) {
      var result = {};
      for (var s in ss) {
          if (ss.hasOwnProperty(s)) {
            if (s === "displayName") {
              result[s] = ss[s];
            }
            else if (s === "componentWillReceiveProps") {
              result[s] = (function(impl) {
                  return function(nextProps) {
                      return impl(this)(nextProps)();
                  }
              })(ss[s]);
            }
            else if (s === "shouldComponentUpdate") {
              result[s] = (function(impl) {
                  return function(nextProps, nextState) {
                      return impl(this)(nextProps)(nextState.state)();
                  }
              })(ss[s]);
            }
            else if (s === "componentWillUpdate") {
              result[s] = (function(impl) {
                  return function(nextProps, nextState) {
                      return impl(this)(nextProps)(nextState.state)();
                  }
              })(ss[s]);
            }
            else if (s === "componentDidUpdate") {
              result[s] = (function(impl) {
                  return function(prevProps, prevState) {
                      return impl(this)(prevProps)(prevState.state)();
                  }
              })(ss[s]);
            }
            else {
              result[s] = (function(impl) {
                  return function() {
                      return impl(this)();
                  }
              })(ss[s]);
            }
          }
      }
      result.getInitialState = function() {
          return {
              state: ss.getInitialState(this)()
          };
      };
      return React.createClass(result);
  };

  exports.handle = function(f) {
      return function(e) {
          return f(e)();
      };
  };

  exports.createFactory = function(clazz) {
    return React.createFactory(clazz);
  };

  exports.render = function(element) {
    return function(container) {
      return function() {
        return React.render(element, container);
      }
    };
  };                                            
 
})(PS["React"] = PS["React"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["React"];
  var Prelude = PS["Prelude"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var spec = function (st) {
      return function (renderFn) {
          return {
              render: renderFn, 
              displayName: "", 
              getInitialState: function (_699) {
                  return Prelude.pure(Control_Monad_Eff.applicativeEff)(st);
              }, 
              componentWillMount: function (_700) {
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
              }, 
              componentDidMount: function (_701) {
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
              }, 
              componentWillReceiveProps: function (_703) {
                  return function (_702) {
                      return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
                  };
              }, 
              shouldComponentUpdate: function (_706) {
                  return function (_705) {
                      return function (_704) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)(true);
                      };
                  };
              }, 
              componentWillUpdate: function (_709) {
                  return function (_708) {
                      return function (_707) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
                      };
                  };
              }, 
              componentDidUpdate: function (_712) {
                  return function (_711) {
                      return function (_710) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
                      };
                  };
              }, 
              componentWillUnmount: function (_713) {
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
              }
          };
      };
  };
  exports["spec"] = spec;
  exports["render"] = $foreign.render;
  exports["createFactory"] = $foreign.createFactory;
  exports["createClass"] = $foreign.createClass;
  exports["handle"] = $foreign.handle;
  exports["writeState"] = $foreign.writeState;
  exports["readState"] = $foreign.readState;
  exports["getChildren"] = $foreign.getChildren;
  exports["getProps"] = $foreign.getProps;;
 
})(PS["React"] = PS["React"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Unsafe

  exports.unsafeInterleaveEff = function (f) {
    return f;
  };
 
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Unsafe"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["unsafeInterleaveEff"] = $foreign.unsafeInterleaveEff;;
 
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var React = PS["React"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];     
  var GetState = (function () {
      function GetState(value0) {
          this.value0 = value0;
      };
      GetState.create = function (value0) {
          return new GetState(value0);
      };
      return GetState;
  })();
  var SetState = (function () {
      function SetState(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetState.create = function (value0) {
          return function (value1) {
              return new SetState(value0, value1);
          };
      };
      return SetState;
  })();
  var Wait = (function () {
      function Wait(value0) {
          this.value0 = value0;
      };
      Wait.create = function (value0) {
          return new Wait(value0);
      };
      return Wait;
  })();
  var Pure = (function () {
      function Pure(value0) {
          this.value0 = value0;
      };
      Pure.create = function (value0) {
          return new Pure(value0);
      };
      return Pure;
  })();
  var Impure = (function () {
      function Impure(value0) {
          this.value0 = value0;
      };
      Impure.create = function (value0) {
          return new Impure(value0);
      };
      return Impure;
  })();
  var setState = function (s) {
      return Impure.create(new SetState(s, new Pure(Prelude.unit)));
  };
  var runAction = function ($$this) {
      var go = function (_715) {
          if (_715 instanceof Pure) {
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
          };
          if (_715 instanceof Impure && _715.value0 instanceof GetState) {
              return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                  var _66 = React.readState($$this)();
                  return go(_715.value0.value0(_66))();
              });
          };
          if (_715 instanceof Impure && _715.value0 instanceof SetState) {
              return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                  React.writeState($$this)(_715.value0.value0)();
                  return go(_715.value0.value1)();
              });
          };
          if (_715 instanceof Impure && _715.value0 instanceof Wait) {
              return _715.value0.value0(go);
          };
          throw new Error("Failed pattern match at Thermite.Action line 37, column 1 - line 41, column 1: " + [ _715.constructor.name ]);
      };
      return go;
  };
  var getState = Impure.create(new GetState(Pure.create));
  var functorActionF = new Prelude.Functor(function (f) {
      return function (_714) {
          if (_714 instanceof GetState) {
              return new GetState(function (_2663) {
                  return f(_714.value0(_2663));
              });
          };
          if (_714 instanceof SetState) {
              return new SetState(_714.value0, f(_714.value1));
          };
          if (_714 instanceof Wait) {
              return new Wait(function (k) {
                  return _714.value0(function (_2664) {
                      return k(f(_2664));
                  });
              });
          };
          throw new Error("Failed pattern match at Thermite.Action line 24, column 1 - line 34, column 1: " + [ f.constructor.name, _714.constructor.name ]);
      };
  });
  var functorAction = new Prelude.Functor(function (f) {
      return function (_716) {
          if (_716 instanceof Pure) {
              return new Pure(f(_716.value0));
          };
          if (_716 instanceof Impure) {
              return new Impure(Prelude["<$>"](functorActionF)(Prelude["<$>"](functorAction)(f))(_716.value0));
          };
          throw new Error("Failed pattern match: " + [ f.constructor.name, _716.constructor.name ]);
      };
  });
  var async = function (c) {
      return Impure.create(new Wait(function (k) {
          return c(function (_2665) {
              return k(Pure.create(_2665));
          });
      }));
  };
  var monadAction = new Prelude.Monad(function () {
      return applicativeAction;
  }, function () {
      return bindAction;
  });
  var bindAction = new Prelude.Bind(function () {
      return applyAction;
  }, function (_717) {
      return function (f) {
          if (_717 instanceof Pure) {
              return f(_717.value0);
          };
          if (_717 instanceof Impure) {
              return Impure.create(Prelude["<#>"](functorActionF)(_717.value0)(function (a) {
                  return Prelude[">>="](bindAction)(a)(f);
              }));
          };
          throw new Error("Failed pattern match: " + [ _717.constructor.name, f.constructor.name ]);
      };
  });
  var applyAction = new Prelude.Apply(function () {
      return functorAction;
  }, Prelude.ap(monadAction));
  var applicativeAction = new Prelude.Applicative(function () {
      return applyAction;
  }, Pure.create);
  var modifyState = function (f) {
      return Prelude.bind(bindAction)(getState)(function (_67) {
          return setState(f(_67));
      });
  };
  exports["async"] = async;
  exports["modifyState"] = modifyState;
  exports["setState"] = setState;
  exports["getState"] = getState;
  exports["runAction"] = runAction;
  exports["functorAction"] = functorAction;
  exports["applyAction"] = applyAction;
  exports["applicativeAction"] = applicativeAction;
  exports["bindAction"] = bindAction;
  exports["monadAction"] = monadAction;;
 
})(PS["Thermite.Action"] = PS["Thermite.Action"] || {});
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function(x) { return x; }
 
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;;
 
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var React = PS["React"];
  var Prelude = PS["Prelude"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Thermite_Action = PS["Thermite.Action"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var simpleSpec = function (initialState) {
      return function (performAction) {
          return function (render) {
              return {
                  initialState: initialState, 
                  performAction: performAction, 
                  render: render, 
                  componentWillMount: Data_Maybe.Nothing.value, 
                  displayName: Data_Maybe.Nothing.value
              };
          };
      };
  };
  var displayName = function (name) {
      return function (_887) {
          var _3786 = {};
          for (var _3787 in _887) {
              if (_887.hasOwnProperty(_3787)) {
                  _3786[_3787] = _887[_3787];
              };
          };
          _3786.displayName = new Data_Maybe.Just(name);
          return _3786;
      };
  };
  var createClass = function (_888) {
      var displayName_ = Data_Maybe.fromMaybe("")(_888.displayName);
      var dispatch = function ($$this) {
          return function (action) {
              return function __do() {
                  var _77 = React.getProps($$this)();
                  return Thermite_Action.runAction($$this)(Unsafe_Coerce.unsafeCoerce(_888.performAction(_77)(action)))();
              };
          };
      };
      var render = function ($$this) {
          return Prelude["<*>"](Control_Monad_Eff.applyEff)(Prelude["<*>"](Control_Monad_Eff.applyEff)(Prelude["<$>"](Control_Monad_Eff.functorEff)(_888.render(dispatch($$this)))(React.readState($$this)))(React.getProps($$this)))(React.getChildren($$this));
      };
      var componentWillMount_ = function (ctx) {
          return Data_Maybe.maybe(Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit))(function (_3796) {
              return Control_Monad_Eff_Unsafe.unsafeInterleaveEff(dispatch(ctx)(_3796));
          })(_888.componentWillMount);
      };
      return React.createClass((function () {
          var _3790 = {};
          for (var _3791 in React.spec(_888.initialState)(render)) {
              if ((React.spec(_888.initialState)(render)).hasOwnProperty(_3791)) {
                  _3790[_3791] = (React.spec(_888.initialState)(render))[_3791];
              };
          };
          _3790.displayName = displayName_;
          _3790.componentWillMount = componentWillMount_;
          return _3790;
      })());
  };
  var componentWillMount = function (action) {
      return function (_886) {
          var _3794 = {};
          for (var _3795 in _886) {
              if (_886.hasOwnProperty(_3795)) {
                  _3794[_3795] = _886[_3795];
              };
          };
          _3794.componentWillMount = new Data_Maybe.Just(action);
          return _3794;
      };
  };
  exports["displayName"] = displayName;
  exports["createClass"] = createClass;
  exports["componentWillMount"] = componentWillMount;
  exports["simpleSpec"] = simpleSpec;;
 
})(PS["Thermite"] = PS["Thermite"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module React.DOM

  function mkProps(props) {
      var result = {};

      for (var i = 0, len = props.length; i < len; i++) {
          var prop = props[i];

          for (var key in prop) {
              if (prop.hasOwnProperty(key)) {
                  result[key] = prop[key];
              }
          }
      }

      return result;
  };

  exports.mkDOM = function(tagName) {
      return function(props) {
          return function(children) {
              return React.createElement(tagName, props.length > 0 ? mkProps(props) : null, children);
          }
      }
  };

  exports.text = function(text) {
      return text;
  };
 
})(PS["React.DOM"] = PS["React.DOM"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module React.DOM.Props

  exports.unsafeMkProps = function(key) {
      return function(value) {
          var result = {};
          result[key] = value;
          return result;
      };
  };
 
})(PS["React.DOM.Props"] = PS["React.DOM.Props"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["React.DOM.Props"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];                    
  var value = $foreign.unsafeMkProps("value");  
  var placeholder = $foreign.unsafeMkProps("placeholder");
  var onKeyUp = function (f) {
      return $foreign.unsafeMkProps("onKeyUp")(React.handle(f));
  };
  var onClick = function (f) {
      return $foreign.unsafeMkProps("onClick")(React.handle(f));
  };
  var onChange = function (f) {
      return $foreign.unsafeMkProps("onChange")(React.handle(f));
  };                                                
  var href = $foreign.unsafeMkProps("href");      
  var className = $foreign.unsafeMkProps("className");
  exports["onClick"] = onClick;
  exports["onChange"] = onChange;
  exports["onKeyUp"] = onKeyUp;
  exports["value"] = value;
  exports["placeholder"] = placeholder;
  exports["href"] = href;
  exports["className"] = className;;
 
})(PS["React.DOM.Props"] = PS["React.DOM.Props"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["React.DOM"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var span = $foreign.mkDOM("span");  
  var pre = $foreign.mkDOM("pre");
  var input = $foreign.mkDOM("input");
  var hr = $foreign.mkDOM("hr");
  var hr$prime = hr([  ]);
  var h4 = $foreign.mkDOM("h4");
  var h4$prime = h4([  ]);
  var h3 = $foreign.mkDOM("h3");
  var h3$prime = h3([  ]);
  var h2 = $foreign.mkDOM("h2");
  var h2$prime = h2([  ]);
  var div = $foreign.mkDOM("div");
  var div$prime = div([  ]);      
  var button = $foreign.mkDOM("button");
  var a = $foreign.mkDOM("a");
  exports["span"] = span;
  exports["pre"] = pre;
  exports["input"] = input;
  exports["hr'"] = hr$prime;
  exports["hr"] = hr;
  exports["h4'"] = h4$prime;
  exports["h4"] = h4;
  exports["h3'"] = h3$prime;
  exports["h3"] = h3;
  exports["h2'"] = h2$prime;
  exports["h2"] = h2;
  exports["div'"] = div$prime;
  exports["div"] = div;
  exports["button"] = button;
  exports["a"] = a;
  exports["text"] = $foreign.text;;
 
})(PS["React.DOM"] = PS["React.DOM"] || {});
(function(exports) {
  /* global exports */
  "use strict";          

  exports.nullable = function(a, r, f) {
      return a == null ? r : f(a);
  }; 
 
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];                              
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;;
 
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // jshint maxparams: 1
  exports.toForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
 
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };
 
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Int"];
  var Prelude = PS["Prelude"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var $$Math = PS["Math"];                                                                   
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["fromNumber"] = fromNumber;;
 
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];
  var Data_Int = PS["Data.Int"];
  var Data_String = PS["Data.String"];     
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if (Prelude["=="](Prelude.eqString)($foreign.tagOf(value))(tag)) {
              return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
          };
          return new Data_Either.Left(new TypeMismatch(tag, $foreign.tagOf(value)));
      };
  }; 
  var readString = unsafeReadTagged("String");
  var readNumber = unsafeReadTagged("Number");
  var readInt = function (value) {
      var error = Data_Either.Left.create(new TypeMismatch("Int", $foreign.tagOf(value)));
      var fromNumber = function (_1547) {
          return Data_Maybe.maybe(error)(Prelude.pure(Data_Either.applicativeEither))(Data_Int.fromNumber(_1547));
      };
      return Data_Either.either(Prelude["const"](error))(fromNumber)(readNumber(value));
  };
  exports["TypeMismatch"] = TypeMismatch;
  exports["readInt"] = readInt;
  exports["readNumber"] = readNumber;
  exports["readString"] = readString;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["typeOf"] = $foreign.typeOf;
  exports["toForeign"] = $foreign.toForeign;;
 
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var Contravariant = function (cmap) {
      this.cmap = cmap;
  };
  var cmap = function (dict) {
      return dict.cmap;
  };
  exports["Contravariant"] = Contravariant;
  exports["cmap"] = cmap;;
 
})(PS["Data.Functor.Contravariant"] = PS["Data.Functor.Contravariant"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Contravariant = PS["Data.Functor.Contravariant"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Const = function (x) {
      return x;
  };
  var getConst = function (_386) {
      return _386;
  };
  var functorConst = new Prelude.Functor(function (_396) {
      return function (_397) {
          return _397;
      };
  });
  var contravariantConst = new Data_Functor_Contravariant.Contravariant(function (_403) {
      return function (_404) {
          return _404;
      };
  });
  var applyConst = function (__dict_Semigroup_10) {
      return new Prelude.Apply(function () {
          return functorConst;
      }, function (_398) {
          return function (_399) {
              return Prelude["<>"](__dict_Semigroup_10)(_398)(_399);
          };
      });
  };
  var applicativeConst = function (__dict_Monoid_11) {
      return new Prelude.Applicative(function () {
          return applyConst(__dict_Monoid_11["__superclass_Prelude.Semigroup_0"]());
      }, function (_402) {
          return Data_Monoid.mempty(__dict_Monoid_11);
      });
  };
  exports["Const"] = Const;
  exports["getConst"] = getConst;
  exports["functorConst"] = functorConst;
  exports["applyConst"] = applyConst;
  exports["applicativeConst"] = applicativeConst;
  exports["contravariantConst"] = contravariantConst;;
 
})(PS["Data.Const"] = PS["Data.Const"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foreign.Index

  // jshint maxparams: 4
  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };
 
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Foreign.Index"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Int = PS["Data.Int"];
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
      };
  };
  var prop = unsafeReadProp;
  exports["prop"] = prop;;
 
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Const = PS["Data.Const"];
  var Data_Either = PS["Data.Either"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Functor_Contravariant = PS["Data.Functor.Contravariant"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Foreign_Keys = PS["Data.Foreign.Keys"];
  var getMap = function (__dict_Monoid_0) {
      return function (f) {
          return function (g) {
              return function (_1570) {
                  return Data_Const.getConst(g(Data_Const.contravariantConst)(Data_Const.applicativeConst(__dict_Monoid_0))(function (_1571) {
                      return Data_Const.Const(f(_1571));
                  })(_1570));
              };
          };
      };
  };
  var get = function (g) {
      return function (_1572) {
          return Data_Maybe_First.runFirst(getMap(Data_Maybe_First.monoidFirst)(function (_1573) {
              return Data_Maybe_First.First(Data_Maybe.Just.create(_1573));
          })(function (__dict_Contravariant_1) {
              return function (__dict_Applicative_2) {
                  return g(__dict_Contravariant_1)(__dict_Applicative_2);
              };
          })(_1572));
      };
  };
  var coerce = function (__dict_Contravariant_3) {
      return function (__dict_Functor_4) {
          var absurd = function (__copy_a) {
              var a = __copy_a;
              tco: while (true) {
                  var __tco_a = a;
                  a = __tco_a;
                  continue tco;
              };
          };
          return function (_1574) {
              return Prelude.map(__dict_Functor_4)(absurd)(Data_Functor_Contravariant.cmap(__dict_Contravariant_3)(absurd)(_1574));
          };
      };
  };
  var getter = function (f) {
      return function (__dict_Contravariant_5) {
          return function (__dict_Applicative_6) {
              return function (g) {
                  return function (s) {
                      var _1567 = f(s);
                      if (_1567 instanceof Data_Either.Left) {
                          return coerce(__dict_Contravariant_5)((__dict_Applicative_6["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.pure(__dict_Applicative_6)(Prelude.unit));
                      };
                      if (_1567 instanceof Data_Either.Right) {
                          return coerce(__dict_Contravariant_5)((__dict_Applicative_6["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g(_1567.value0));
                      };
                      throw new Error("Failed pattern match at Data.Foreign.Lens line 54, column 1 - line 55, column 1: " + [ _1567.constructor.name ]);
                  };
              };
          };
      };
  };
  var $$int = function (__dict_Contravariant_9) {
      return function (__dict_Applicative_10) {
          return getter(Data_Foreign.readInt)(__dict_Contravariant_9)(__dict_Applicative_10);
      };
  };
  var prop = function (p) {
      return function (__dict_Contravariant_17) {
          return function (__dict_Applicative_18) {
              return getter(Data_Foreign_Index.prop(p))(__dict_Contravariant_17)(__dict_Applicative_18);
          };
      };
  };
  var string = function (__dict_Contravariant_19) {
      return function (__dict_Applicative_20) {
          return getter(Data_Foreign.readString)(__dict_Contravariant_19)(__dict_Applicative_20);
      };
  };
  exports["prop"] = prop;
  exports["int"] = $$int;
  exports["string"] = string;
  exports["getMap"] = getMap;
  exports["get"] = get;
  exports["getter"] = getter;;
 
})(PS["Data.Foreign.Lens"] = PS["Data.Foreign.Lens"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Lens = PS["Data.Foreign.Lens"];     
  var getValue = Prelude[">>>"](Prelude.semigroupoidFn)(Data_Foreign.toForeign)(Prelude[">>>"](Prelude.semigroupoidFn)(Data_Foreign_Lens.get(function (__dict_Contravariant_0) {
      return function (__dict_Applicative_1) {
          return Prelude[">>>"](Prelude.semigroupoidFn)(Data_Foreign_Lens.string(__dict_Contravariant_0)(__dict_Applicative_1))(Prelude[">>>"](Prelude.semigroupoidFn)(Data_Foreign_Lens.prop("value")(__dict_Contravariant_0)(__dict_Applicative_1))(Data_Foreign_Lens.prop("target")(__dict_Contravariant_0)(__dict_Applicative_1)));
      };
  }))(Data_Maybe.fromMaybe("")));
  var getKeyCode = Prelude[">>>"](Prelude.semigroupoidFn)(Data_Foreign.toForeign)(Prelude[">>>"](Prelude.semigroupoidFn)(Data_Foreign_Lens.get(function (__dict_Contravariant_2) {
      return function (__dict_Applicative_3) {
          return Prelude[">>>"](Prelude.semigroupoidFn)(Data_Foreign_Lens["int"](__dict_Contravariant_2)(__dict_Applicative_3))(Data_Foreign_Lens.prop("keyCode")(__dict_Contravariant_2)(__dict_Applicative_3));
      };
  }))(Data_Maybe.fromMaybe(0)));
  exports["getKeyCode"] = getKeyCode;
  exports["getValue"] = getValue;;
 
})(PS["Component.Event"] = PS["Component.Event"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Array = PS["Data.Array"];
  var Data_List = PS["Data.List"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Map = PS["Data.Map"];
  var Data_Set = PS["Data.Set"];
  var Data_Syntax = PS["Data.Syntax"];
  var Data_Expr = PS["Data.Expr"];
  var Data_Parse = PS["Data.Parse"];
  var Data_PrettyPrint = PS["Data.PrettyPrint"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Save = PS["Control.Monad.Eff.Save"];
  var Thermite = PS["Thermite"];
  var Thermite_Action = PS["Thermite.Action"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var Component_Event = PS["Component.Event"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Warning = (function () {
      function Warning() {

      };
      Warning.value = new Warning();
      return Warning;
  })();
  var Danger = (function () {
      function Danger() {

      };
      Danger.value = new Danger();
      return Danger;
  })();
  var DoNothing = (function () {
      function DoNothing() {

      };
      DoNothing.value = new DoNothing();
      return DoNothing;
  })();
  var NewText = (function () {
      function NewText(value0) {
          this.value0 = value0;
      };
      NewText.create = function (value0) {
          return new NewText(value0);
      };
      return NewText;
  })();
  var ParseText = (function () {
      function ParseText() {

      };
      ParseText.value = new ParseText();
      return ParseText;
  })();
  var Reduce = (function () {
      function Reduce(value0) {
          this.value0 = value0;
      };
      Reduce.create = function (value0) {
          return new Reduce(value0);
      };
      return Reduce;
  })();
  var DismissAlert = (function () {
      function DismissAlert() {

      };
      DismissAlert.value = new DismissAlert();
      return DismissAlert;
  })();
  var Remove = (function () {
      function Remove(value0) {
          this.value0 = value0;
      };
      Remove.create = function (value0) {
          return new Remove(value0);
      };
      return Remove;
  })();
  var Clear = (function () {
      function Clear() {

      };
      Clear.value = new Clear();
      return Clear;
  })();
  var Save = (function () {
      function Save() {

      };
      Save.value = new Save();
      return Save;
  })();
  var showLevel = new Prelude.Show(function (_16) {
      if (_16 instanceof Warning) {
          return "warning";
      };
      if (_16 instanceof Danger) {
          return "danger";
      };
      throw new Error("Failed pattern match at Component.App line 38, column 1 - line 42, column 1: " + [ _16.constructor.name ]);
  });
  var renderSyntax = function (syntax) {
      return React_DOM.h4([ React_DOM_Props.className("text-muted") ])([ React_DOM.text(syntax) ]);
  };
  var renderHistory = function (hs) {
      var _18 = Data_Array.uncons(hs);
      if (_18 instanceof Data_Maybe.Nothing) {
          return [  ];
      };
      if (_18 instanceof Data_Maybe.Just) {
          return Data_Array.cons(React_DOM["h4'"]([ React_DOM.text(_18.value0.head) ]))(Prelude.map(Prelude.functorArray)(renderSyntax)(_18.value0.tail));
      };
      throw new Error("Failed pattern match at Component.App line 312, column 1 - line 313, column 1: " + [ _18.constructor.name ]);
  };
  var renderExprs = function (send) {
      return function (history) {
          return function (_15) {
              if (_15 instanceof Data_Maybe.Nothing) {
                  return [  ];
              };
              if (_15 instanceof Data_Maybe.Just) {
                  return [ React_DOM["h3'"]([ React_DOM.text("Evaluation") ]), React_DOM.div([ React_DOM_Props.className("col-sm-12") ])([ React_DOM.div([ React_DOM_Props.className("btn-group pull-right") ])([ React_DOM.button([ React_DOM_Props.className("btn btn-default"), React_DOM_Props.onClick(function (_10) {
                      return send(new Reduce(_15.value0));
                  }) ])([ React_DOM.text("Step") ]), React_DOM.button([ React_DOM_Props.className("btn btn-default"), React_DOM_Props.onClick(function (_11) {
                      return send(Clear.value);
                  }) ])([ React_DOM.text("Clear") ]), React_DOM.button([ React_DOM_Props.className("btn btn-default"), React_DOM_Props.onClick(function (_12) {
                      return send(Save.value);
                  }) ])([ React_DOM.text("Save") ]) ]), React_DOM.div([ React_DOM_Props.className("hide-overflow") ])([ React_DOM.div([ React_DOM_Props.className("scroll-overflow monospace-font") ])(renderHistory(history)) ]) ]) ];
              };
              throw new Error("Failed pattern match at Component.App line 279, column 1 - line 280, column 1: " + [ send.constructor.name, history.constructor.name, _15.constructor.name ]);
          };
      };
  };
  var renderDef = function (send) {
      return function (def) {
          return React_DOM["h4'"]([ React_DOM.div([ React_DOM_Props.className("glyphicon glyphicon-remove"), React_DOM_Props.onClick(function (_9) {
              return send(new Remove(def.name));
          }) ])([  ]), React_DOM.text(" " + (def.name + (" = " + Data_PrettyPrint.prettyPrint(Data_Syntax.prettyPrintSyntax)(def.syntax)))) ]);
      };
  };
  var renderDefs = function (send) {
      return function (definitions) {
          return [ React_DOM["h3'"]([ React_DOM.text("Definitions") ]), React_DOM.div([ React_DOM_Props.className("monospace-font col-sm-12") ])(Prelude.map(Prelude.functorArray)(renderDef(send))(definitions)) ];
      };
  };
  var reduce = function (expr) {
      return function (s) {
          var _30 = Data_Expr.step(s.env)(expr);
          if (_30 instanceof Data_Maybe.Nothing) {
              return s;
          };
          if (_30 instanceof Data_Maybe.Just) {
              var _31 = {};
              for (var _32 in s) {
                  if (s.hasOwnProperty(_32)) {
                      _31[_32] = s[_32];
                  };
              };
              _31.history = Data_Array.cons(Data_PrettyPrint.prettyPrint(Data_Syntax.prettyPrintSyntax)(Data_Expr.exprToSyntax(_30.value0)))(s.history);
              _31.expr = new Data_Maybe.Just(_30.value0);
              return _31;
          };
          throw new Error("Failed pattern match at Component.App line 169, column 1 - line 170, column 1: " + [ _30.constructor.name ]);
      };
  };
  var initialDefs = [ {
      name: "i", 
      syntax: Data_Parse.unsafeParse(Data_Parse.parseSyntax)("\u03bbx. x")
  }, {
      name: "k", 
      syntax: Data_Parse.unsafeParse(Data_Parse.parseSyntax)("\u03bbx. \u03bby. x")
  }, {
      name: "fix", 
      syntax: Data_Parse.unsafeParse(Data_Parse.parseSyntax)("\u03bbf. (\u03bbx. f (x x)) (\u03bby. f (y y))")
  } ];
  var initialEnv = (function () {
      var fromDef = function (def) {
          return new Data_Tuple.Tuple(def.name, Data_Expr.syntaxToExpr(def.syntax));
      };
      return Data_Map.fromList(Prelude.ordString)(Data_List.toList(Data_Foldable.foldableArray)(Prelude.map(Prelude.functorArray)(fromDef)(initialDefs)));
  })();
  var initialState = {
      text: "", 
      expr: Data_Maybe.Nothing.value, 
      history: [  ], 
      defs: initialDefs, 
      env: initialEnv, 
      error: Data_Maybe.Nothing.value
  };
  var header = React_DOM.div([ React_DOM_Props.className("page-header") ])([ React_DOM["h2'"]([ React_DOM.text("Lambda Machine") ]) ]);
  var handleKeyPress = function (e) {
      var _34 = Component_Event.getKeyCode(e);
      if (_34 === 13) {
          return ParseText.value;
      };
      return DoNothing.value;
  };
  var handleChangeEvent = Prelude[">>>"](Prelude.semigroupoidFn)(Component_Event.getValue)(NewText.create);
  var input = function (send) {
      return function (value) {
          return React_DOM.div([ React_DOM_Props.className("col-sm-12") ])([ React_DOM.div([ React_DOM_Props.className("input-group") ])([ React_DOM.input([ React_DOM_Props.className("form-control monospace-font"), React_DOM_Props.placeholder("<definition> or <expression>"), React_DOM_Props.value(value), React_DOM_Props.onKeyUp(Prelude[">>>"](Prelude.semigroupoidFn)(handleKeyPress)(send)), React_DOM_Props.onChange(Prelude[">>>"](Prelude.semigroupoidFn)(handleChangeEvent)(send)) ])([  ]), React_DOM.span([ React_DOM_Props.className("input-group-btn") ])([ React_DOM.button([ React_DOM_Props.className("btn btn-default"), React_DOM_Props.onClick(function (_8) {
              return send(ParseText.value);
          }) ])([ React_DOM.text("Parse") ]) ]) ]) ]);
      };
  };
  var footer = React_DOM["div'"]([ React_DOM["hr'"]([  ]), React_DOM.a([ React_DOM_Props.href("https://github.com/cdparks/lambda-machine"), React_DOM_Props.className("pull-right") ])([ React_DOM.text("Source on GitHub") ]) ]);
  var fail = function (message) {
      return function (s) {
          var _36 = {};
          for (var _37 in s) {
              if (s.hasOwnProperty(_37)) {
                  _36[_37] = s[_37];
              };
          };
          _36.text = "";
          _36.error = new Data_Maybe.Just(new Data_Tuple.Tuple(Danger.value, message));
          return _36;
      };
  };
  var deleteByName = function (name) {
      return Data_Array.filter(Prelude[">>>"](Prelude.semigroupoidFn)(function (_0) {
          return _0.name;
      })(function (_1) {
          return Prelude["/="](Prelude.eqString)(_1)(name);
      }));
  };
  var remove = function (name) {
      return function (s) {
          var env$prime = Data_Map["delete"](Prelude.ordString)(name)(s.env);
          var names = Data_Expr.namesReferencing(name)(env$prime);
          var error = (function () {
              var _38 = Data_Set.size(names) === 0;
              if (_38) {
                  return Data_Maybe.Nothing.value;
              };
              if (!_38) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(Warning.value, Data_Expr.formatUndefinedWarning(name)(names)));
              };
              throw new Error("Failed pattern match at Component.App line 136, column 1 - line 137, column 1: " + [ _38.constructor.name ]);
          })();
          var _39 = {};
          for (var _40 in s) {
              if (s.hasOwnProperty(_40)) {
                  _39[_40] = s[_40];
              };
          };
          _39.defs = deleteByName(name)(s.defs);
          _39.env = env$prime;
          _39.error = error;
          return _39;
      };
  };
  var clear = function (s) {
      var _41 = {};
      for (var _42 in s) {
          if (s.hasOwnProperty(_42)) {
              _41[_42] = s[_42];
          };
      };
      _41.history = Data_Maybe.maybe([  ])(Prelude[">>>"](Prelude.semigroupoidFn)(Data_Expr.exprToSyntax)(Prelude[">>>"](Prelude.semigroupoidFn)(Data_PrettyPrint.prettyPrint(Data_Syntax.prettyPrintSyntax))(Data_Array.singleton)))(s.expr);
      return _41;
  };
  var alert = function (send) {
      return function (_14) {
          if (_14 instanceof Data_Maybe.Nothing) {
              return [  ];
          };
          if (_14 instanceof Data_Maybe.Just) {
              return [ React_DOM.div([ React_DOM_Props.className("col-sm-12") ])([ React_DOM.pre([ React_DOM_Props.className("alert alert-" + Prelude.show(showLevel)(_14.value0.value0)) ])([ React_DOM.span([ React_DOM_Props.className("glyphicon glyphicon-remove pull-right"), React_DOM_Props.onClick(function (_7) {
                  return send(DismissAlert.value);
              }) ])([  ]), React_DOM.text(_14.value0.value1) ]) ]) ];
          };
          throw new Error("Failed pattern match at Component.App line 220, column 1 - line 221, column 1: " + [ send.constructor.name, _14.constructor.name ]);
      };
  };
  var render = function (send) {
      return function (state) {
          return function (props) {
              return function (_13) {
                  return React_DOM.div([ React_DOM_Props.className("container") ])([ React_DOM.div([ React_DOM_Props.className("row") ])([ header ]), React_DOM.div([ React_DOM_Props.className("row") ])(alert(send)(state.error)), React_DOM.div([ React_DOM_Props.className("row") ])([ input(send)(state.text) ]), React_DOM.div([ React_DOM_Props.className("row") ])(renderDefs(send)(state.defs)), React_DOM.div([ React_DOM_Props.className("row") ])(renderExprs(send)(state.history)(state.expr)), React_DOM.div([ React_DOM_Props.className("row") ])([ footer ]) ]);
              };
          };
      };
  };
  var addExpr = function (syntax) {
      return function (s) {
          var history = [ Data_PrettyPrint.prettyPrint(Data_Syntax.prettyPrintSyntax)(syntax) ];
          var expr = new Data_Maybe.Just(Data_Expr.syntaxToExpr(syntax));
          var _49 = {};
          for (var _50 in s) {
              if (s.hasOwnProperty(_50)) {
                  _49[_50] = s[_50];
              };
          };
          _49.text = "";
          _49.history = history;
          _49.expr = expr;
          return _49;
      };
  };
  var addDef = function (def) {
      return function (s) {
          var expr = Data_Expr.syntaxToExpr(def.syntax);
          var missing = Data_Expr.undefinedNames(expr)(Data_Map["delete"](Prelude.ordString)(def.name)(s.env));
          var env = Data_Map.insert(Prelude.ordString)(def.name)(expr)(s.env);
          var defs = Data_Array.snoc(deleteByName(def.name)(s.defs))(def);
          var _51 = Data_Set.size(missing) === 0;
          if (_51) {
              var _52 = {};
              for (var _53 in s) {
                  if (s.hasOwnProperty(_53)) {
                      _52[_53] = s[_53];
                  };
              };
              _52.text = "";
              _52.defs = defs;
              _52.env = env;
              return _52;
          };
          if (!_51) {
              return fail(Data_Expr.formatUndefinedError(s.text)(missing))(s);
          };
          throw new Error("Failed pattern match at Component.App line 149, column 1 - line 150, column 1: " + [ _51.constructor.name ]);
      };
  };
  var parse = function (s) {
      if (Prelude["=="](Prelude.eqString)(s.text)("")) {
          return s;
      };
      var _55 = Data_Parse.parseAll(Data_Parse.parseEither)(s.text);
      if (_55 instanceof Data_Either.Left) {
          return fail(Data_Parse.formatParseError(s.text)(_55.value0))(s);
      };
      if (_55 instanceof Data_Either.Right && _55.value0 instanceof Data_Either.Left) {
          return addDef(_55.value0.value0)(s);
      };
      if (_55 instanceof Data_Either.Right && _55.value0 instanceof Data_Either.Right) {
          return addExpr(_55.value0.value0)(s);
      };
      throw new Error("Failed pattern match at Component.App line 124, column 1 - line 125, column 1: " + [ _55.constructor.name ]);
  };
  var update = function (props) {
      return function (action) {
          var defToString = function (def) {
              return def.name + (" = " + Data_PrettyPrint.prettyPrint(Data_Syntax.prettyPrintSyntax)(def.syntax));
          };
          if (action instanceof DoNothing) {
              return Prelude["return"](Thermite_Action.applicativeAction)(Prelude.unit);
          };
          if (action instanceof NewText) {
              return Thermite_Action.modifyState(function (s) {
                  var _62 = {};
                  for (var _63 in s) {
                      if (s.hasOwnProperty(_63)) {
                          _62[_63] = s[_63];
                      };
                  };
                  _62.text = action.value0;
                  _62.error = Data_Maybe.Nothing.value;
                  return _62;
              });
          };
          if (action instanceof DismissAlert) {
              return Thermite_Action.modifyState(function (s) {
                  var _65 = {};
                  for (var _66 in s) {
                      if (s.hasOwnProperty(_66)) {
                          _65[_66] = s[_66];
                      };
                  };
                  _65.error = Data_Maybe.Nothing.value;
                  return _65;
              });
          };
          if (action instanceof Remove) {
              return Thermite_Action.modifyState(remove(action.value0));
          };
          if (action instanceof ParseText) {
              return Thermite_Action.modifyState(parse);
          };
          if (action instanceof Reduce) {
              return Thermite_Action.modifyState(reduce(action.value0));
          };
          if (action instanceof Clear) {
              return Thermite_Action.modifyState(clear);
          };
          if (action instanceof Save) {
              return Prelude.bind(Thermite_Action.bindAction)(Thermite_Action.getState)(function (_2) {
                  return Thermite_Action.async(function (k) {
                      var text = Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("\n")(Prelude["<>"](Prelude.semigroupArray)(Prelude.map(Prelude.functorArray)(defToString)(_2.defs))(Data_Array.reverse(_2.history)));
                      return function __do() {
                          Control_Monad_Eff_Save.saveTextAs(text)("evaluation.txt")();
                          return k(Prelude.unit)();
                      };
                  });
              });
          };
          throw new Error("Failed pattern match at Component.App line 94, column 1 - line 95, column 1: " + [ action.constructor.name ]);
      };
  };
  var appClass = Thermite.createClass(Thermite.simpleSpec(initialState)(update)(render));
  exports["appClass"] = appClass;;
 
})(PS["Component.App"] = PS["Component.App"] || {});
(function(exports) {
  /* global exports, window */
  "use strict";

  // module DOM.HTML

  exports.window = function () {
    return window;
  };
 
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["DOM.HTML.Types"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                  
  var htmlElementToElement = Unsafe_Coerce.unsafeCoerce;
  exports["htmlElementToElement"] = htmlElementToElement;;
 
})(PS["DOM.HTML.Types"] = PS["DOM.HTML.Types"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["DOM.HTML"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["window"] = $foreign.window;;
 
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module DOM.HTML.Document

  exports.body = function (doc) {
    return function () {
      return doc.body;
    };
  };
 
})(PS["DOM.HTML.Document"] = PS["DOM.HTML.Document"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["DOM.HTML.Document"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Nullable = PS["Data.Nullable"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["body"] = $foreign.body;;
 
})(PS["DOM.HTML.Document"] = PS["DOM.HTML.Document"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module DOM.HTML.Window

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };
 
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["DOM.HTML.Window"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["document"] = $foreign.document;;
 
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Component_App = PS["Component.App"];
  var React = PS["React"];
  var DOM = PS["DOM"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Document = PS["DOM.HTML.Document"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var DOM_Node_Types = PS["DOM.Node.Types"];     
  var body = function __do() {
      var _5 = DOM_HTML.window();
      var _4 = DOM_HTML_Window.document(_5)();
      var _3 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(DOM_HTML_Document.body(_4))();
      return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude["<$>"](Data_Maybe.functorMaybe)(DOM_HTML_Types.htmlElementToElement)(_3))();
  };
  var main = function __do() {
      var _6 = body();
      return (function () {
          if (_6 instanceof Data_Maybe.Nothing) {
              return Control_Monad_Eff_Console.log("No body element");
          };
          if (_6 instanceof Data_Maybe.Just) {
              return function __do() {
                  React.render(React.createFactory(Component_App.appClass)(Prelude.unit))(_6.value0)();
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit)();
              };
          };
          throw new Error("Failed pattern match at Main line 29, column 1 - line 30, column 1: " + [ _6.constructor.name ]);
      })()();
  };
  exports["main"] = main;
  exports["body"] = body;;
 
})(PS["Main"] = PS["Main"] || {});

PS["Main"].main();
